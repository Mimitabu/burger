{"version":3,"sources":["components/app/app.module.css","components/app-header/header-item/headerItem.module.css","components/burger-ingredients/ingredient-container/ingredientContainer.module.css","components/burger-constructor/burgerConstructor.module.css","components/burger-constructor/order-list/orderList.module.css","components/burger-constructor/order-list/filling-container/fillingContainer.module.css","components/burger-constructor/total-block/totalBlock.module.css","components/modal-overlay/modalOverlay.module.css","pages/profile/profile-orders/profileOrders.module.css","components/orders-stack/img-stack-row/imgStackRow.module.css","components/app-header/header-item/headerItem.tsx","components/app-header/appHeader.tsx","components/burger-ingredients/ingredient-item/ingredientItem.tsx","components/burger-ingredients/ingredient-container/ingredientContainer.tsx","utils/url.ts","services/actions/item.ts","services/hooks.ts","components/burger-ingredients/burgerIngredients.tsx","components/burger-constructor/order-list/filling-container/filling-item/fillingItem.tsx","components/burger-constructor/order-list/filling-container/fillingContainer.tsx","components/burger-constructor/order-list/orderList.tsx","utils/selector.tsx","components/burger-constructor/total-block/totalBlock.tsx","components/burger-constructor/burgerConstructor.tsx","components/ingredient-details/ingredientDetails.tsx","images/done.png","components/order-details/orderDetails.tsx","components/modal-overlay/modalOverlay.tsx","components/modal/modal.tsx","services/actions/auth.ts","pages/login/login.tsx","pages/register/register.tsx","pages/fogot-password/fogotPassword.tsx","pages/reset-password/resetPassword.tsx","pages/profile/custom-input-email.tsx","pages/profile/custom-input.tsx","pages/profile/profile-form/profileForm.tsx","components/orders-stack/img-stack-row/imgStackRow.tsx","components/orders-stack/orsers-stack-item/ordersStackItem.tsx","services/actions/wsActionTypes.ts","pages/profile/profile-orders/profileOrders.tsx","components/protected-route.tsx","components/stack-details/stack-item/stackItem.tsx","components/stack-details/stackDetails.tsx","pages/profile/profile.tsx","components/orders-stack/ordersStack.tsx","components/orders-statistic/ordersStatistic.tsx","pages/feed/feed.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/item.tsx","services/reducers/auth.tsx","services/reducers/wsReducer.tsx","services/reducers/index.tsx","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/ingredient-details/ingredientDetails.module.css","pages/profile/profile.module.css","components/orders-statistic/ordersStatistic.module.css","pages/login/login.module.css","components/stack-details/stackDetails.module.css","components/burger-ingredients/ingredient-item/ingredientItem.module.css","pages/register/register.module.css","pages/fogot-password/fogotPassword.module.css","pages/reset-password/resetPassword.module.css","components/orders-stack/orsers-stack-item/ordersStackItem.module.css","components/stack-details/stack-item/stackItem.module.css","components/app-header/appHeader.module.css","components/order-details/orderDetails.module.css","components/modal/modal.module.css","pages/feed/feed.module.css","components/burger-ingredients/burgerIngredients.module.css","pages/profile/profile-form/profileForm.module.css","components/orders-stack/ordersStack.module.css"],"names":["module","exports","HeaderItem","clickFunc","children","styles","text","className","headerItemStyle","container","onClick","AppHeader","history","useHistory","headerStyle","header","replace","pathname","type","logo","IngredientItem","item","useDrag","dragRef","ref","ingredientStyle","push","state","background","_id","__v","count","size","image","alt","name","src","priceContainer","price","IngredientContainer","data","useRef","id","containerStyle","ingredientContainer","map","Fragment","URL","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SHOW_MODAL","HIDE_MODAL","ADD_BUN_TO_ODER","ADD_INGREDIENT_TO_ORDER","REMOVE_FROM_ORDER","MOVE_ITEM_IN_ORDER","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","CHANDGE_CURRENT_TAB","useDispatch","dispatchHook","useSelector","selectorHook","BurgerIngredients","dispatch","current","store","currentTab","changeCurrent","TabUse","style","display","value","active","ingredients","ingredient","items","getData","arr","filter","el","bun","main","sauce","bunContainer","document","getElementById","sauceContainer","mainContainer","burgerIngredientsStyle","section","onScroll","parentPosition","getBoundingClientRect","top","bunPosition","bottom","saucePosition","mainPosition","FillingItem","index","_key","useDrop","accept","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","hoverClientY","getClientOffset","y","drop","collect","isDragging","opacity","drag","thumbnail","handleClose","removeItem","FillingContainer","orderItems","orderContainer","OrderList","buns","itemId","length","moveItem","isHover","isOver","dropTarget","bunTop","useMemo","width","isLocked","uuid_v4","bunBottom","orderListStyle","list","totalPriceSelector","reduce","acc","TotalBlock","totalPrice","hasRequestOrderFailed","order","user","register","totalBlockStyle","forEach","email","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","a","ok","json","parsed","orderNumber","number","catch","err","content","currentItem","BurgerConstructor","burgerConstructorStyle","IngredientDetails","useParams","modalIngredientStyle","image_large","modalImage","spansContainer","spans","calories","proteins","fat","carbohydrates","OrderDetails","orderDetailsStyle","ModalOverlay","props","overlayStyle","closeModal","modalElement","Modal","keyHandler","event","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","target","modalStyle","pStyle","close","closeStyle","REG_USER_REQUEST","REG_USER_SUCCESS","REG_USER_FAILED","AUTH_USER_REQUEST","AUTH_USER_SUCCESS","AUTH_USER_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","FOGOT_PASS_REQUEST","FOGOT_PASS_SUCCESS","FOGOT_PASS_FAILED","RESET_PASS_REQUEST","RESET_PASS_SUCCESS","RESET_PASS_FAILED","CHANGE_USER_REQUEST","CHANGE_USER_SUCCESS","CHANGE_USER_FAILED","checkReponse","Promise","reject","refreshToken","token","retriableFetch","url","options","result","message","refreshData","setItem","accessToken","LoginPage","historyState","useLocation","React","useState","password","setState","onChange","e","onRegisterClick","useCallback","onResetPassClick","hasReqAuthSuccess","hasReqAuthFailed","to","from","form","onSubmit","pass","preventDefault","placeholder","error","errorText","buttons","RegisterPage","nameRef","emailRef","onLoginClick","hasReqRegFailed","hasReqRegSuccess","FogotPassPage","setValue","hasFogotPassReqFailed","hasFogotPassReqSuccess","status","ResetPasswordPage","hasResetPassReqSuccess","hasResetPassReqFailed","action","code","EmailInputCustom","fieldDisabled","setDisabled","setError","inputRef","icon","onBlur","test","validateField","onFocus","disabled","onIconClick","setTimeout","focus","InputCustom","ProfileForm","setName","setEmail","setPass","isChanged","setIsChanged","hasChangeUserReqFailed","hasChangeUserReqSuccess","obj","undefined","changeUserData","buttonContainer","ImgStackRow","bunElement","itemsElement","slice","lastElement","parentContainer","imageContainer","transform","zIndex","backgroundImage","backgroundSize","backgroundPosition","element","image_last","span","OrderStackItem","currentPath","window","location","includes","diffDate","Date","getDate","Number","createdAt","split","time","currentDate","totalContainer","WS_CONNECTION_START","WS_CONNECTION_START_ALL","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","ProfileOrdersPage","ordersFull","ws","messages","ProtectedRoute","rest","render","StackItem","nameCont","total","StackDetails","orders","ingredientsArr","elemItems","elemItem","colorText","stack","ProfilePage","hasLogoutFailed","showIndex","tabsContainer","exact","link","activeClassName","linkActive","button","func","path","OrderStack","OrdersStatistic","totalToday","doneOrders","pendingOrders","elem","splice","color","inProgress","colorNum","Feed","Routes","show","modal","appStyle","DndProvider","backend","HTML5Backend","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dragCard","initialStateIngredients","isLoading","hasRequestFailed","initialStateModal","currentIngredient","initialStateOrder","isLoadingOrder","initialStateTab","initialStateUser","regUserRequest","authUserRequest","getUserRequest","hasGetUserReqFailed","hasGetUserReqSuccess","logoutRequest","hasLogoutSuccess","fogotPassRequest","resetPassRequest","changeUserRequest","initialState","wsConnected","rootReducer","combineReducers","payload","socketMiddleware","wsUrl","wsActions","socket","next","wsInit","wsInitAll","onOpen","onClose","onError","onMessage","WebSocket","onopen","onerror","onmessage","parsedData","parse","restParsedData","success","onclose","createStore","compose","applyMiddleware","thunkMiddleware","initStore","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,KAAO,oB,oBCAzBD,EAAOC,QAAU,CAAC,UAAY,gC,oBCA9BD,EAAOC,QAAU,CAAC,oBAAsB,mD,oBCAxCD,EAAOC,QAAU,CAAC,QAAU,qC,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,oBCAxDD,EAAOC,QAAU,CAAC,eAAiB,2C,oBCAnCD,EAAOC,QAAU,CAAC,UAAY,gC,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,kC,oBCA9BD,EAAOC,QAAU,CAAC,KAAO,8B,yCCAzBD,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,eAAiB,oCAAoC,MAAQ,2BAA2B,WAAa,gCAAgC,KAAO,0BAA0B,WAAa,kC,+gDCmB7OC,MAVf,YAA6E,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,KAC/C,OACI,yBAAQC,UAAS,UAAKC,IAAgBC,UAArB,4CACbC,QAASP,EADb,UAEKC,EACD,qBAAKG,UAAS,oBAAeF,GAA7B,SAAwCC,QCmCrCK,MA5Cf,WACI,IAAMC,EAAUC,cAYhB,OACI,yBAAQN,UAAS,UAAKO,IAAYC,OAAjB,UAAjB,UACI,sBAAKR,UAAWO,IAAYL,UAA5B,UACI,cAAC,EAAD,CACIH,KAAK,qEACLD,OAAO,6CACPF,UAdQ,WACpBS,EAAQI,QAAQ,CAAEC,SAAU,OAUpB,SAKI,cAAC,cAAD,CAAYC,KAAK,cAErB,cAAC,EAAD,CAAYZ,KAAK,4EACbD,OAAO,6CACPF,UAjBC,WACbS,EAAQI,QAAQ,CAAEC,SAAU,WAcpB,SAII,cAAC,YAAD,CAAUC,KAAK,mBAGvB,qBAAKX,UAAWO,IAAYK,KAA5B,SACI,cAAC,QAAD,MAEJ,cAAC,EAAD,CACIb,KAAK,kFACLD,OAAO,qDACPF,UAlCQ,WAChBS,EAAQI,QAAQ,CAAEC,SAAU,cA8BxB,SAKI,cAAC,eAAD,CAAaC,KAAK,oB,oECAnBE,MAhCf,YAAwD,IAA9BC,EAA6B,EAA7BA,KAChBT,EAAUC,cAChB,EAAoBS,YAAQ,CACxBJ,KAAM,cACNG,KAAM,CAAEA,UAFHE,EAAT,oBAYA,OACI,sBAAKC,IAAKD,EAAShB,UAAWkB,IAAgBhB,UAAWC,QAR7D,WACIE,EAAQc,KAAK,CACTC,MAAO,CAAEC,WAAY,CAAEX,SAAU,MACjCA,SAAS,gBAAD,OAAkBI,EAAKQ,QAKnC,UAEqB,IAAbR,EAAKS,KACL,cAAC,WAAD,CAASC,MAAOV,EAAKS,IAAKE,KAAK,YAEnC,qBAAKzB,UAAS,UAAKkB,IAAgBQ,MAArB,mBAA6CC,IAAKb,EAAKc,KAAMC,IAAKf,EAAKY,QACrF,sBAAK1B,UAAS,UAAKkB,IAAgBY,eAArB,SAAd,UACI,sBAAM9B,UAAU,qCAAhB,SAAsDc,EAAKiB,QAC3D,cAAC,gBAAD,CAAcpB,KAAK,eAEvB,qBAAKX,UAAS,UAAKkB,IAAgBU,KAArB,gCAAd,SACKd,EAAKc,WCTPI,MAjBf,YAA8E,IAA/CC,EAA8C,EAA9CA,KAAMtB,EAAwC,EAAxCA,KAAMZ,EAAkC,EAAlCA,KACjCkB,EAAMiB,iBAAO,MAEnB,OACI,sBAAKlC,UAAU,cAAcmC,GAAIxB,EAAMM,IAAKA,EAA5C,UACI,oBAAIjB,UAAU,6BAAd,SAA4CD,IAC5C,qBAAKC,UAAS,UAAKoC,IAAeC,oBAApB,yBAAd,SACKJ,EAAKK,KAAI,SAACxB,GAAD,OACN,cAAC,IAAMyB,SAAP,UACI,cAAC,EAAD,CAAgBzB,KAAMA,KADLA,EAAKQ,c,wBCpBjCkB,EAAM,wCCINC,EAAqD,0BACrDC,EAAqD,0BACrDC,EAAmD,yBAyCnDC,EAA2B,aAC3BC,EAA2B,aAC3BC,EAAqC,kBACrCC,EAAqD,0BACrDC,EAAyC,oBACzCC,EAA2C,qBAE3CC,EAAyC,oBACzCC,EAAyC,oBACzCC,EAAuC,mBAkFvCC,EAAsB,sB,QCnItBC,EAAc,kBAAMC,eACpBC,EAA+CC,IC8E7CC,MA5Ef,WACE,IAAMC,EAAWL,IACXM,EAAUJ,GAAY,SAACK,GAAD,OAC1BA,EAAMC,WAAWF,WAEbG,EAAgB,SAACH,GACrBD,EAAS,CACPhD,KAAM0C,EACNO,aAIJ,SAASI,IACP,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAAC,OAAD,CAAKC,MAAM,iCAAQC,OAAoB,mCAAZR,EAAqBzD,QAAS4D,EAAzD,4CAGA,cAAC,OAAD,CAAKI,MAAM,iCAAQC,OAAoB,mCAAZR,EAAqBzD,QAAS4D,EAAzD,4CAGA,cAAC,OAAD,CAAKI,MAAM,6CAAUC,OAAoB,+CAAZR,EAAuBzD,QAAS4D,EAA7D,2DAON,IAAMM,EAAcb,GAAY,SAACK,GAAD,OAC9BA,EAAMS,WAAWC,SAGnB,SAASC,EAAQC,EAAiB9D,GAChC,OAAO8D,EAAIC,QAAO,SAACC,GAAD,OAAQA,EAAGhE,OAASA,KAGxC,IAAMM,EAAMiB,iBAAuB,MAE7B0C,EAAMJ,EAAQH,EAAa,OAC3BQ,EAAOL,EAAQH,EAAa,QAC5BS,EAAQN,EAAQH,EAAa,SAE7BU,EAAmCC,SAASC,eAAe,OAC3DC,EAAqCF,SAASC,eAAe,SAC7DE,EAAoCH,SAASC,eAAe,QAmBlE,OACE,0BAASjF,UAAS,UAAKoF,IAAuBC,QAA5B,UAA6ClD,GAAG,cAAlE,UACE,oBAAInC,UAAU,uCAAd,mGACA,cAACgE,EAAD,IACA,sBAAKhE,UAAWoF,IAAuBD,cAAeG,SArBxC,WAChB,IAAIC,EAAiBtE,EAAI2C,QAAS4B,wBAAwBC,IACtDC,EAAcX,EAAcS,wBAAwBG,OAASJ,EAC7DK,EAAgBV,EAAgBM,wBAAwBG,OAASJ,EACjEM,EAAeV,EAAeK,wBAAwBG,OAASJ,EAE/DG,EAAc,GAChB3B,EAAc,kCAEZ2B,EAAc,GAAKE,EAAgB,GAAKA,EAAgBL,GAC1DxB,EAAc,kCAEZ2B,EAAc,GAAKE,EAAgB,GAAKC,EAAeN,GACzDxB,EAAc,+CAQ6D9C,IAAKA,EAAhF,UACE,cAAC,EAAD,CAAqBlB,KAAK,iCAAQkC,KAAM2C,EAAKjE,KAAK,QAClD,cAAC,EAAD,CAAqBZ,KAAK,iCAAQkC,KAAM6C,EAAOnE,KAAK,UACpD,cAAC,EAAD,CAAqBZ,KAAK,6CAAUkC,KAAM4C,EAAMlE,KAAK,gB,uFC9C9C,SAASmF,GAAT,GAA+D,IAAxChF,EAAuC,EAAvCA,KAAMiF,EAAiC,EAAjCA,MAClC9E,GADmE,EAA1B+E,KACnC9D,iBAAuB,OAC7ByB,EAAWL,IAWjB,EAAiB2C,aAAQ,CACrBC,OAAQ,UACRC,MAAO,SAACrF,EAA0BsF,GAAkB,IAAD,EAC/C,GAAKnF,EAAI2C,QAAT,CAGA,IAAMyC,EAAYvF,EAAKiF,MACjBO,EAAaP,EACnB,GAAIM,IAAcC,EAAlB,CAGA,IAAMC,EAAiB,UAAGtF,EAAI2C,eAAP,aAAG,EAAa4B,wBACjCgB,GAAgBD,EAAkBZ,OAASY,EAAkBd,KAAO,EAEpEgB,EADeL,EAAQM,kBACKC,EAAIJ,EAAkBd,IACpDY,EAAYC,GAAcG,EAAeD,GAGzCH,EAAYC,GAAcG,EAAeD,IAG7C7C,EAAS,CACLhD,KAAMsC,EACNoD,YACAC,eAEJxF,EAAKiF,MAAQO,QA1BZM,EAAT,oBA8BA,EAA+B7F,YAAQ,CACnCJ,KAAM,UACNG,KAAM,WACF,MAAO,CAAEA,OAAMiF,UAEnBc,QAAS,SAACT,GAAD,MAAc,CACnBU,WAAYV,EAAQU,iBAN5B,mBASMC,EATN,KAASD,WASoB,EAAI,EAGjC,OAFAE,EAVA,MAUKJ,EAAK3F,IAGN,sBAAKjB,UAAU,kBAAkBiB,IAAKA,EAAKgD,MAAO,CAAE8C,WAApD,UACI,cAAC,YAAD,CAAUpG,KAAK,YACf,cAAC,sBAAD,CACIZ,KAAMe,EAAKc,KACXG,MAAOjB,EAAKiB,MACZkF,UAAWnG,EAAKY,MAChBwF,YAAa,YA1DN,SAAC5F,EAAayE,EAAeC,GAC5CrC,EAAS,CACLhD,KAAMqC,EACN1B,MACAyE,QACAC,SAqDyBmB,CAAWrG,EAAKQ,IAAKyE,EAAOjF,EAAKkF,YC3EvDoB,OAbf,WACI,IAAQC,EAAe7D,GAAY,SAACK,GAAD,OAC/BA,EAAMS,cADF+C,WAGR,OACI,qBAAKrH,UAAWiE,KAAMqD,eAAtB,SACKD,EAAW/E,KAAI,SAACxB,EAAgBiF,GAAjB,OACZ,cAACD,GAAD,CAA6BhF,KAAMA,EAAMiF,MAAOA,GAA9BjF,EAAKkF,YC6ExBuB,OAzEf,WACI,IAAM5D,EAAWL,IAETkE,EAAShE,GAAY,SAACK,GAAD,OACzBA,EAAMS,cADFkD,KAoBR,EAAuBvB,aAAQ,CAC3BC,OAAQ,cACRU,KAF2B,SAEtBa,IAlBT,SAAkB3G,GACd,IAAQQ,EAAQR,EAAKA,KAAbQ,IACe,QAAnBR,EAAKA,KAAKH,KACU,IAAhB6G,EAAKE,QAAgC,IAAhBF,EAAKE,QAC1B/D,EAAS,aACLhD,KAAMmC,GACH,CAAExB,SAIbqC,EAAS,aACLhD,KAAMoC,GACH,CAAEzB,SAOTqG,CAASF,IAEbZ,QAAS,SAAAT,GAAO,MAAK,CACjBwB,QAASxB,EAAQyB,aANhBC,EAAT,oBAUMC,EAASC,mBACX,WACI,OAAOR,EAAKlF,KAAI,SAACxB,GAAD,OACZ,qBAAqBd,UAAU,sBAAsBiE,MAAO,CAAEC,QAAS,OAAQ+D,MAAO,QAAtF,SACI,cAAC,sBAAD,CACItH,KAAK,MACLuH,UAAU,EACVnI,KAAI,UAAKe,EAAKc,KAAV,+BACJG,MAAOjB,EAAKiB,MACZkF,UAAWnG,EAAKY,SANdyG,qBAUf,CAACX,IAEFY,EAAYJ,mBACd,WACI,OAAOR,EAAKlF,KAAI,SAACxB,GAAD,OACZ,qBAAqBd,UAAU,sBAAsBiE,MAAO,CAAEC,QAAS,OAAQ+D,MAAO,QAAtF,SACI,cAAC,sBAAD,CACItH,KAAK,SACLuH,UAAU,EACVnI,KAAI,UAAKe,EAAKc,KAAV,yBACJG,MAAOjB,EAAKiB,MACZkF,UAAWnG,EAAKY,SANdyG,qBAUf,CAACX,IAGR,OACI,sBAAKvG,IAAK6G,EAAY9H,UAAS,UAAKqI,KAAeC,KAApB,UAA/B,UACKP,EACD,cAAC,GAAD,IACCK,M,qBCrFAG,GAAqB,SAACnH,GAC/B,MAEIA,EADAkD,WAAc+C,EADlB,EACkBA,WAAYG,EAD9B,EAC8BA,KAE9B,OAAOH,EAAWmB,QAAO,SAACC,EAAa3H,GAAd,OAA2C2H,EAAM3H,EAAKiB,QAAO,GAClF,EAAIyF,EAAKgB,QAAO,SAACC,EAAa3H,GAAd,OAA2C2H,EAAM3H,EAAKiB,QAAO,IC4DtE2G,OA1Df,WACI,IAAM/E,EAAWL,IACXjD,EAAUC,cACR+G,EAAe7D,GAAY,SAACK,GAAD,OAC/BA,EAAMS,cADF+C,WAEAG,EAAShE,GAAY,SAACK,GAAD,OACzBA,EAAMS,cADFkD,KAGFmB,EAAanF,EAAY+E,IACzBK,EAAwBpF,GAAY,SAACK,GAAD,OACtCA,EAAMgF,MAAMD,yBAERE,EAAStF,GAAY,SAACK,GAAD,OACzBA,EAAMkF,YADFD,KAkCR,OACI,sBAAK9I,UAAWgJ,KAAgB9I,UAAhC,UACI,sBAAMF,UAAU,oCAAhB,SAAqD2I,IACrD,cAAC,gBAAD,CAAchI,KAAK,YACnB,qBAAKX,UAAU,UACf,cAAC,UAAD,CAAQW,KAAK,UAAUc,KAAK,SAAStB,QApC7C,WACI,IP+E4B8B,EO/ExB4G,EAAe,GACnBxB,EAAW4B,SAAQ,SAACnI,GAChB+H,EAAM1H,KAAKL,EAAKQ,QAGpBkG,EAAKyB,SAAQ,SAACnI,GACV+H,EAAM1H,KAAKL,EAAKQ,QAGhB+F,EAAWK,OAAS,GAAKF,EAAKE,OAAS,IACpB,KAAfoB,EAAKI,OAA8B,KAAdJ,EAAKlH,MAC1B+B,GPoEoB1B,EOpED4G,EPqExB,SAAUlF,GACbA,EAAS,CACLhD,KAAMuC,IAEViG,MAAM,GAAD,OAAI3G,EAAJ,WAAkB,CACnB4G,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,cAAc,GAAD,OAAKC,aAAaC,QAAQ,iBAE3CC,KAAMC,KAAKC,UAAU,CACjBtF,YAAapC,MAElB2H,KATH,uCASQ,WAAMC,GAAN,eAAAC,EAAA,0DACAD,IAAOA,EAAIE,GADX,gCAEqBF,EAAIG,OAFzB,OAEMC,EAFN,OAGAtG,EAAS,CACLhD,KAAMwC,EACN+G,YAAaD,EAAOpB,MAAMsB,SAL9B,sBAQAxG,EAAS,CACLhD,KAAMyC,IATV,2CATR,uDAqBGgH,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMyC,UO/FDwF,GAWbjF,EAAS,CACLhD,KAAMiC,EACN0H,QAAS,KACTC,YAAa,MAVTlK,EAAQI,QAAQ,CAAEC,SAAU,aAmBhC,iGC7CG8J,OATf,WACI,OACI,0BAASxK,UAAS,UAAKyK,IAAuBpF,QAA5B,eAAkDlD,GAAG,cAAvE,UACI,cAAC,GAAD,IACA,cAAC,GAAD,Q,oBCiCGuI,OAtCf,WACI,IAAMvI,EAAOwI,cAAPxI,GAIArB,EAHY0C,GAAY,SAACK,GAAD,OAC1BA,EAAMS,cADFC,MAGWG,QAAO,SAAA5D,GAAI,OAAIA,EAAKQ,MAAQa,KAAI,GACnD,OAAKrB,EAKD,sBAAKd,UAAW4K,KAAqBN,QAArC,UACI,qBAAKzI,IAAKf,EAAK+J,YAAa7K,UAAS,UAAK4K,KAAqBE,WAA1B,SAA6CnJ,IAAKb,EAAKc,OAC5F,sBAAM5B,UAAU,kCAAhB,SACKc,EAAKc,OAEV,sBAAK5B,UAAW4K,KAAqBG,eAArC,UACI,sBAAK/K,UAAS,UAAK4K,KAAqBI,MAA1B,SAAd,UACI,sBAAMhL,UAAU,uDAAhB,iFACA,sBAAMA,UAAU,oDAAhB,SAAqEc,EAAKmK,cAE9E,sBAAKjL,UAAS,UAAK4K,KAAqBI,MAA1B,SAAd,UACI,sBAAMhL,UAAU,uDAAhB,oDACA,sBAAMA,UAAU,oDAAhB,SAAqEc,EAAKoK,cAE9E,sBAAKlL,UAAS,UAAK4K,KAAqBI,MAA1B,SAAd,UACI,sBAAMhL,UAAU,uDAAhB,8CACA,sBAAMA,UAAU,oDAAhB,SAAqEc,EAAKqK,SAE9E,sBAAKnL,UAAW4K,KAAqBI,MAArC,UACI,sBAAMhL,UAAU,uDAAhB,sEACA,sBAAMA,UAAU,oDAAhB,SAAqEc,EAAKsK,yBAxB/E,M,oBCZA,OAA0B,iCC4B1BC,OAvBf,WACI,IAAMlB,EAAS3G,GAAY,SAACK,GAAD,OACvBA,EAAMgF,MAAMqB,eAEhB,OACI,sBAAKlK,UAAWsL,KAAkBpL,UAAlC,UACI,qBAAKF,UAAS,UAAKsL,KAAkBvL,KAAvB,qCAAd,SACKoK,IAEL,sBAAMnK,UAAU,mCAAhB,iIAGA,qBAAK6B,IAAKH,GAAO1B,UAAS,UAAKsL,KAAkB5J,MAAvB,UAAsCC,IAAI,UACpE,sBAAM3B,UAAU,mCAAhB,qJAGA,sBAAMA,UAAU,kDAAhB,gQ,yCCLGuL,GARM,SAACC,GAClB,OACI,qBAAKxL,UAAWyL,KAAavL,UAAWC,QAASqL,EAAME,WAAYvJ,GAAI,UAAvE,SACKqJ,EAAM3L,YCLb8L,GAAe3G,SAASC,eAAe,gBA2D9B2G,OA3Cf,SAAeJ,GAEX,IAAQE,EAAeF,EAAfE,WAQFG,EAAa,SAACC,GACE,WAAdA,EAAMC,KACNL,KAYR,OARAM,qBAAU,WAEN,OADAhH,SAASiH,iBAAiB,UAAWJ,GAC9B,WACH7G,SAASkH,oBAAoB,UAAWL,MAG7C,IAEIM,IAASC,aACZ,cAAC,GAAD,CAAcV,WArBlB,SAAeI,GACPA,EAAMO,SAAWrH,SAASC,eAAe,YACzCyG,KAmBJ,SACI,sBAAK1L,UAAS,UAAKsM,KAAWhC,QAAhB,YAA2BkB,EAAMe,QAAUpK,GAAG,QAA5D,UACI,sBAAKnC,UAAWsM,KAAW9L,OAA3B,UACI,mBAAGR,UAAU,4BAAb,SACKwL,EAAMhL,SAEX,qBAAKR,UAAWsM,KAAWE,MAAOrM,QAASqL,EAAME,WAC7CzH,MAAOuH,EAAMiB,WAAYtK,GAAG,aADhC,SAEI,cAAC,aAAD,CAAWxB,KAAK,iBAGvB6K,EAAM3L,cAGf8L,KCzDKe,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBAErCC,GAAyC,oBACzCC,GAAyC,oBACzCC,GAAuC,mBAEvCC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBAErCC,GAA6C,sBAC7CC,GAA6C,sBAC7CC,GAA2C,qBAE3CC,GAA2C,qBAC3CC,GAA2C,qBAC3CC,GAAyC,oBAEzCC,GAA2C,qBAC3CC,GAA2C,qBAC3CC,GAAyC,oBAEzCC,GAA6C,sBAC7CC,GAA6C,sBAC7CC,GAA2C,qBAgMlDC,GAAe,SAAClE,GAClB,OAAOA,EAAIE,GAAKF,EAAIG,OAASH,EAAIG,OAAOJ,MAAK,SAACS,GAAD,OAAc2D,QAAQC,OAAO5D,OAGjE6D,GAAY,uCAAG,4BAAApE,EAAA,sEACNX,MAAM,GAAD,OAAI3G,EAAJ,eAAsB,CACzC4G,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBI,KAAMC,KAAKC,UAAU,CACjBwE,MAAO5E,aAAaC,QAAQ,oBAPZ,cAClBK,EADkB,yBAUjBkE,GAAalE,IAVI,2CAAH,qDAaZuE,GAAc,uCAAG,WAAOC,GAAP,mCAAAvE,EAAA,6DAAoBwE,EAApB,+BAA8B,GAA9B,kBAEJnF,MAAMkF,EAAKC,GAFP,cAEhBzE,EAFgB,gBAGDkE,GAAalE,GAHZ,cAGhB0E,EAHgB,yBAIfA,GAJe,qCAOF,gBAAhB,KAAIC,QAPc,kCAQQN,KARR,eAQZO,EARY,OASlBlF,aAAamF,QAAQ,eAAgBD,EAAYP,cACjD3E,aAAamF,QAAQ,cAAeD,EAAYE,aAV9B,UAgBAxF,MAAMkF,EAAKC,GAhBX,eAgBZzE,EAhBY,iBAiBLkE,GAAalE,GAjBR,sHAAH,sD,qCCrOZ,SAAS+E,KACpB,IAAMC,EAAeC,cAAmB1N,MAClCuC,EAAWL,IACjB,EAA0ByL,IAAMC,SAAS,CACrC9F,MAAO,GACP+F,SAAU,KAFd,mBAAO7N,EAAP,KAAc8N,EAAd,KAIMC,EAAW,SAACC,GACd,IAAMjL,EAAQiL,EAAE/C,OAAOlI,MACjBvC,EAAOwN,EAAE/C,OAAOzK,KACtBsN,EAAS,2BACF9N,GADC,mBAEHQ,EAAOuC,MAGV9D,EAAUC,cACV+O,EAAkBC,uBACpB,WACIjP,EAAQI,QAAQ,CAAEC,SAAU,gBAEhC,CAACL,IAGCkP,EAAmBD,uBACrB,WACIjP,EAAQI,QAAQ,CAAEC,SAAU,sBAEhC,CAACL,IAGL,EAAgDmD,GAAY,SAACK,GAAD,OACxDA,EAAMkF,YADFyG,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,iBAWnB3G,EAAStF,GAAY,SAACK,GAAD,OACzBA,EAAMkF,YADFD,KAGR,MAAmB,KAAfA,EAAKI,OAA8B,KAAdJ,EAAKlH,KAEtB,cAAC,IAAD,CACI8N,IAAgB,OAAZb,QAAY,IAAZA,OAAA,EAAAA,EAAcc,OAAQ,MAMlC,qBAAK3P,UAAWiE,KAAM/D,UAAtB,SACI,sBAAKF,UAAWiE,KAAMqG,QAAtB,UACI,oBAAItK,UAAU,iCAAd,sCACA,uBAAMA,UAAWiE,KAAM2L,KAAMC,SAvB3B,SAACT,GD2Ie,IAAClG,EAAe4G,EC1I1CV,EAAEW,iBACFpM,GDyI2BuF,ECzIT9H,EAAM8H,MDyIkB4G,ECzIX1O,EAAM6N,SD0IlC,SAAUtL,GACbA,EAAS,CACLhD,KAAMkM,KAEV1D,MAAM,GAAD,OAAI3G,EAAJ,eAAsB,CACvB4G,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CACjB,MAAST,EACT,SAAY4G,MAEjBlG,KAPH,uCAOQ,WAAMC,GAAN,eAAAC,EAAA,0DACAD,IAAOA,EAAIE,GADX,gCAEqBF,EAAIG,OAFzB,OAEMC,EAFN,OAGAtG,EAAS,CACLhD,KAAMmM,GACNhE,KAAMmB,EAAOnB,OAEjBS,aAAamF,QAAQ,cAAezE,EAAO0E,aAC3CpF,aAAamF,QAAQ,eAAgBzE,EAAOiE,cAR5C,uBAUAvK,EAAS,CACLhD,KAAMoM,KAXV,4CAPR,uDAqBG3C,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMoM,WCpKVyC,GACAnP,EAAQI,QAAQ,CAAEC,SAAU,OAmBxB,UACI,cAAC,SAAD,CACIC,KAAM,QACNqP,YAAa,SACbb,SAAUA,EACVvN,KAAM,QACNuC,MAAO/C,EAAM8H,MACb+G,OAAO,EACPC,UAAW,uCACXzO,KAAM,YAEV,qBAAKzB,UAAU,SACf,cAAC,iBAAD,CAAemP,SAAUA,EAAUhL,MAAO/C,EAAM6N,SAAUrN,KAAM,aAChE,qBAAK5B,UAAU,SACdyP,GACG,qCACI,sBAAMzP,UAAU,kDAAhB,uSAGA,qBAAKA,UAAU,YAGvB,cAAC,UAAD,CAAQW,KAAK,UAAUc,KAAK,QAA5B,4CAGA,qBAAKzB,UAAU,aAEnB,sBAAKA,UAAWiE,KAAMkM,QAAtB,UACI,sBAAMnQ,UAAU,kDAAhB,6IACA,cAAC,UAAD,CAAQW,KAAK,YAAYc,KAAK,SAAStB,QAASkP,EAAhD,6HAIJ,sBAAKrP,UAAWiE,KAAMkM,QAAtB,UACI,sBAAMnQ,UAAU,kDAAhB,wFACA,cAAC,UAAD,CAAQW,KAAK,YAAYc,KAAK,SAAStB,QAASoP,EAAhD,mI,wBC5FL,SAASa,KACpB,MAA0BrB,IAAMC,SAAS,CACrCpN,KAAM,GACNsH,MAAO,GACP+F,SAAU,KAHd,mBAAO7N,EAAP,KAAc8N,EAAd,KAKMC,EAAW,SAACC,GACd,IAAMjL,EAAQiL,EAAE/C,OAAOlI,MACjBvC,EAAOwN,EAAE/C,OAAOzK,KACtBsN,EAAS,2BACF9N,GADC,mBAEHQ,EAAOuC,MAIVkM,EAAUnO,iBAAO,MACjBoO,EAAWpO,iBAAO,MAElB7B,EAAUC,cACVqD,EAAWL,IAEXiN,EAAejB,uBACjB,WACIjP,EAAQI,QAAQ,CAAEC,SAAU,aAEhC,CAACL,IAGL,EAA8CmD,GAAY,SAACK,GAAD,OACtDA,EAAMkF,YADFyH,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,iBAWjB3H,EAAStF,GAAY,SAACK,GAAD,OACzBA,EAAMkF,YADFD,KAGR,MAAmB,KAAfA,EAAKI,OAA8B,KAAdJ,EAAKlH,KAEtB,cAAC,IAAD,CACI8N,GAAI,CACAhP,SAAU,OAOtB,qBAAKV,UAAWiE,KAAM/D,UAAtB,SACI,sBAAKF,UAAWiE,KAAMqG,QAAtB,UACI,oBAAItK,UAAU,iCAAd,gFACA,uBAAMA,UAAWiE,KAAM2L,KAAMC,SAzBxB,SAACT,GF2GW,IAAClG,EAAe4G,EAAclO,EE1GvDwN,EAAEW,iBACFpM,GFyG0BuF,EEzGT9H,EAAM8H,MFyGkB4G,EEzGX1O,EAAM6N,SFyGmBrN,EEzGTR,EAAMQ,KF0GjD,SAAU+B,GACbA,EAAS,CACLhD,KAAM+L,KAEVvD,MAAM,GAAD,OAAI3G,EAAJ,kBAAyB,CAC1B4G,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CACjB,MAAST,EACT,SAAY4G,EACZ,KAAQlO,MAEbgI,KARH,uCAQQ,WAAMC,GAAN,eAAAC,EAAA,0DACAD,IAAOA,EAAIE,GADX,gCAEqBF,EAAIG,OAFzB,OAEMC,EAFN,OAGAtG,EAAS,CACLhD,KAAMgM,GACN7D,KAAMmB,EAAOnB,OAEjBS,aAAamF,QAAQ,cAAezE,EAAO0E,aAC3CpF,aAAamF,QAAQ,eAAgBzE,EAAOiE,cAR5C,uBAUAvK,EAAS,CACLhD,KAAMiM,KAXV,4CARR,uDAsBGxC,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMiM,WErIV6D,GACApQ,EAAQI,QAAQ,CAAEC,SAAU,YAqBxB,UACI,cAAC,SAAD,CACIC,KAAM,OACNqP,YAAa,qBACbb,SAAUA,EACVvN,KAAM,OACNuC,MAAO/C,EAAMQ,KACbqO,OAAO,EACPhP,IAAKoP,EACLH,UAAW,uCACXzO,KAAM,YAEV,qBAAKzB,UAAU,SACf,cAAC,SAAD,CACIW,KAAM,QACNqP,YAAa,SACbb,SAAUA,EACVvN,KAAM,QACNuC,MAAO/C,EAAM8H,MACb+G,OAAO,EACPhP,IAAKqP,EACLJ,UAAW,uCACXzO,KAAM,YAEV,qBAAKzB,UAAU,SACf,cAAC,iBAAD,CAAemP,SAAUA,EAAUhL,MAAO/C,EAAM6N,SAAUrN,KAAM,aAChE,qBAAK5B,UAAU,SACdwQ,GACG,qCACI,sBAAMxQ,UAAU,kDAAhB,gTAGA,qBAAKA,UAAU,YAGvB,cAAC,UAAD,CAAQW,KAAK,UAAUc,KAAK,QAA5B,0HAGA,qBAAKzB,UAAU,aAEnB,sBAAKA,UAAWiE,KAAMkM,QAAtB,UACI,sBAAMnQ,UAAU,kDAAhB,kIACA,cAAC,UAAD,CAAQW,KAAK,YAAYc,KAAK,SAAStB,QAASoQ,EAAhD,oD,wBClGL,SAASG,KACpB,MAA0B3B,IAAMC,SAAS,IAAzC,mBAAO7K,EAAP,KAAcwM,EAAd,KACMtQ,EAAUC,cACVqD,EAAWL,IAEjB,EAA0DE,GAAY,SAACK,GAAD,OAClEA,EAAMkF,YADsB6H,GAAhC,EAAQC,uBAAR,EAAgCD,uBAG1BL,EAAejB,uBACjB,WACIjP,EAAQI,QAAQ,CAAEC,SAAU,aAEhC,CAACL,IAWGyI,EAAStF,GAAY,SAACK,GAAD,OACzBA,EAAMkF,YADFD,KAGR,MAAmB,KAAfA,EAAKI,OAA8B,KAAdJ,EAAKlH,KAEtB,cAAC,IAAD,CACI8N,GAAI,CACAhP,SAAU,OAOtB,qBAAKV,UAAWiE,KAAM/D,UAAtB,SACI,sBAAKF,UAAWiE,KAAMqG,QAAtB,UACI,oBAAItK,UAAU,iCAAd,uIACA,uBAAMA,UAAWiE,KAAM2L,KAAMC,SAzBpB,SAACT,GHwSS,IAAClG,EGvS5BkG,EAAEW,iBACY,KAAV5L,IACAR,GHqSwBuF,EGrSL/E,EHsSpB,SAAUR,GACbA,EAAS,CACLhD,KAAM2M,KAEVnE,MAAM,GAAD,OAAI3G,EAAJ,mBAA0B,CAC3B4G,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CACjBT,MAAOA,MAEZU,KANH,uCAMQ,WAAMC,GAAN,SAAAC,EAAA,sDACAD,GAAsB,MAAfA,EAAIiH,OACXnN,EAAS,CACLhD,KAAM4M,KAGV5J,EAAS,CACLhD,KAAM6M,KAPV,2CANR,uDAgBGpD,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAM6M,WG3TVnN,EAAQI,QAAQ,CAAEC,SAAU,sBAqBxB,UACI,cAAC,SAAD,CACIC,KAAM,QACNqP,YAAa,oDACbb,SAAU,SAAAC,GAAC,OAAIuB,EAASvB,EAAE/C,OAAOlI,QACjCvC,KAAM,QACNuC,MAAOA,EACP8L,OAAO,EACPC,UAAW,uCACXzO,KAAM,YAEV,qBAAKzB,UAAU,SACd4Q,GACG,qCACI,sBAAM5Q,UAAU,uDAAhB,6NAGA,qBAAKA,UAAU,YAGvB,cAAC,UAAD,CAAQW,KAAK,UAAUc,KAAK,QAA5B,sFAGA,qBAAKzB,UAAU,aAEnB,sBAAKA,UAAWiE,KAAMkM,QAAtB,UACI,sBAAMnQ,UAAU,kDAAhB,0GACA,cAAC,UAAD,CAAQW,KAAK,YAAYc,KAAK,SAAStB,QAASoQ,EAAhD,oD,wBCnEL,SAASQ,KACpB,IAAM1Q,EAAUC,cACVqD,EAAWL,IACjB,EAA0DE,GAAY,SAACK,GAAD,OAClEA,EAAMkF,YADFiI,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,sBAGhC,EAA0BlC,IAAMC,SAAS,CACrCC,SAAU,GACVd,MAAO,KAFX,mBAAO/M,EAAP,KAAc8N,EAAd,KAIMqB,EAAejB,uBACjB,WACIjP,EAAQI,QAAQ,CAAEC,SAAU,aAEhC,CAACL,IAGC8O,EAAW,SAACC,GACd,IAAMjL,EAAQiL,EAAE/C,OAAOlI,MACjBvC,EAAOwN,EAAE/C,OAAOzK,KACtBsN,EAAS,2BACF9N,GADC,mBAEHQ,EAAOuC,MAgBhB,EAAyCX,GAAY,SAACK,GAAD,OACjDA,EAAMkF,YADFD,EAAR,EAAQA,KAAR,EAAc+H,uBAGd,MAAmB,KAAf/H,EAAKI,OAA8B,KAAdJ,EAAKlH,KAEtB,cAAC,IAAD,CACI8N,GAAI,CACAhP,SAAU,OAMH,YAAnBL,EAAQ6Q,OAEJ,cAAC,IAAD,CACIxB,GAAI,CACAhP,SAAU,qBAOtB,qBAAKV,UAAWiE,KAAM/D,UAAtB,SACI,sBAAKF,UAAWiE,KAAMqG,QAAtB,UACI,oBAAItK,UAAU,iCAAd,uIACA,uBAAMA,UAAWiE,KAAM2L,KAAMC,SAvCtB,SAACT,GJ0TW,IAACU,EAAcqB,EIzT1C/B,EAAEW,iBACqB,KAAnB3O,EAAM6N,UAAmC,KAAhB7N,EAAM+M,QAC/BxK,GJuTwBmM,EItTV1O,EAAM6N,SJsTkBkC,EItTR/P,EAAM+M,MJuTrC,SAAUxK,GACbA,EAAS,CACLhD,KAAM8M,KAEVtE,MAAM,GAAD,OAAI3G,EAAJ,yBAAgC,CACjC4G,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CACjBsF,SAAUa,EACV3B,MAAOgD,MAEZvH,KAPH,uCAOQ,WAAMC,GAAN,SAAAC,EAAA,sDACAD,GAAOA,EAAIE,GACXpG,EAAS,CACLhD,KAAM+M,KAGV/J,EAAS,CACLhD,KAAMgN,KAPV,2CAPR,uDAiBGvD,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMgN,WI5UNqD,GACA3Q,EAAQI,QAAQ,CAAEC,SAAU,aAgC5B,UACI,cAAC,iBAAD,CAAeyO,SAAUA,EAAUhL,MAAO/C,EAAM6N,SAC5CrN,KAAM,aACV,qBAAK5B,UAAU,SACf,cAAC,SAAD,CACIW,KAAM,OACNqP,YAAa,kHACbb,SAAUA,EACVvN,KAAM,QACNuC,MAAO/C,EAAM+M,MACb8B,OAAO,EACPC,UAAW,uCACXzO,KAAM,YAEV,qBAAKzB,UAAU,SACdiR,GACG,qCACI,sBAAMjR,UAAU,uDAAhB,6NAGA,qBAAKA,UAAU,YAGvB,cAAC,UAAD,CAAQW,KAAK,UAAUc,KAAK,QAA5B,oEAGA,qBAAKzB,UAAU,aAEnB,sBAAKA,UAAWiE,KAAMkM,QAAtB,UACI,sBAAMnQ,UAAU,kDAAhB,0GACA,cAAC,UAAD,CAAQW,KAAK,YAAYc,KAAK,SAAStB,QAASoQ,EAAhD,oD,wBChGPa,GAAmB,SAAC,GAe1B,IAdHjN,EAcE,EAdFA,MACAgL,EAaE,EAbFA,SACAvN,EAYE,EAZFA,KACAjB,EAWE,EAXFA,KACAqP,EAUE,EAVFA,YAUE,IATFvO,YASE,MATK,UASL,EACF,EAAqCuN,oBAAS,GAA9C,mBAAOqC,EAAP,KAAsBC,EAAtB,KAEA,EAA0BtC,oBAAS,GAAnC,mBAAOiB,EAAP,KAAcsB,EAAd,KAEMC,EAAWtP,iBAAyB,MAuB1C,OACI,cAAC,SAAD,CACIvB,KAAMA,EACNqP,YAAaA,EACbb,SAAUA,EACVsC,KAAM,WACNtN,MAAOA,EACPlD,IAAKuQ,EACLE,OAhBO,SAACtC,GACRA,EAAE/C,OAAOlI,MATK,SAACA,GACnBoN,GAhCO,6BACDI,KA+BkBxN,IASpByN,CAAcxC,EAAE/C,OAAOlI,OAEvBoN,GAAS,GAEbD,GAAY,IAWRO,QArBQ,WACZN,GAAS,IAqBL3P,KAAMA,EACNqO,MAAOA,EACP6B,SAAUT,EACVU,YAlCY,WAChBT,GAAY,GACZU,YAAW,kCAAMR,EAAS5N,eAAf,aAAM,EAAkBqO,UAAS,IAiCxC/B,UAAW,gHACXzO,KAAMA,KC1DLyQ,GAAc,SAAC,GAerB,IAdH/N,EAcE,EAdFA,MACAgL,EAaE,EAbFA,SACAvN,EAYE,EAZFA,KACAjB,EAWE,EAXFA,KACAqP,EAUE,EAVFA,YAUE,IATFvO,YASE,MATK,UASL,EACF,EAAqCuN,oBAAS,GAA9C,mBAAOqC,EAAP,KAAsBC,EAAtB,KAEA,EAA0BtC,oBAAS,GAAnC,mBAAOiB,EAAP,KAAcsB,EAAd,KAEMC,EAAWtP,iBAAyB,MAuB1C,OACI,cAAC,SAAD,CACIvB,KAAMA,EACNqP,YAAaA,EACbb,SAAUA,EACVsC,KAAM,WACNtN,MAAOA,EACPlD,IAAKuQ,EACLE,OAhBO,SAACtC,GACRA,EAAE/C,OAAOlI,MATK,SAACA,GACnBoN,GAhCO,cACDI,KA+BkBxN,IASpByN,CAAcxC,EAAE/C,OAAOlI,OAEvBoN,GAAS,GAEbD,GAAY,IAWRO,QArBQ,WACZN,GAAS,IAqBL3P,KAAMA,EACNqO,MAAOA,EACP6B,SAAUT,EACVU,YAlCY,WAChBT,GAAY,GACZU,YAAW,kCAAMR,EAAS5N,eAAf,aAAM,EAAkBqO,UAAS,IAiCxC/B,UAAW,iJACXzO,KAAMA,K,oBC1DH,SAAS0Q,KACpB,IAAMxO,EAAWL,IAETwF,EAAStF,GAAY,SAACK,GAAD,OACzBA,EAAMkF,YADFD,KAER,EAAwBkG,mBAASlG,EAAKlH,MAAtC,mBAAOA,EAAP,KAAawQ,EAAb,KACA,EAA0BpD,mBAASlG,EAAKI,OAAxC,mBAAOA,EAAP,KAAcmJ,EAAd,KACA,EAAwBrD,mBAAS,IAAjC,mBAAOc,EAAP,KAAawC,EAAb,KACA,EAAkCtD,oBAAS,GAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEAxG,qBAAU,WACF9C,IAAUJ,EAAKI,OAAStH,IAASkH,EAAKlH,MAC7B,KAATkO,EACA0C,GAAa,GAEbA,GAAa,KAElB,CAACtJ,EAAOtH,EAAMkO,EAAMhH,IAEvB,IAOA,EACgCtF,GAAY,SAACK,GAAD,OACpCA,EAAMkF,YAFN0J,EAAR,EAAQA,uBACJC,EADJ,EACIA,wBAYJ,OACI,mCACqB,KAAf5J,EAAKI,OAA8B,KAAdJ,EAAKlH,KACvB,uBAAM5B,UAAWiE,KAAM2L,KAAMC,SAZxB,SAACT,GACfA,EAAEW,iBAEFpM,EPkVgC,SAAC/B,EAAcsH,EAAe4G,GAClE,OAAO,SAAUnM,GACb,IAAIgP,EAAM,GAENA,OADSC,IAAT9C,EACM,CACFlO,KAAMA,EACNsH,MAAOA,GAGL,CACFtH,KAAMA,EACNsH,MAAOA,EACP+F,SAAUa,GAGlBnM,EAAS,CACLhD,KAAMiN,KAEVzE,MAAM,GAAD,OAAI3G,EAAJ,cAAqB,CACtB4G,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChBC,cAAc,GAAD,OAAKC,aAAaC,QAAQ,iBAE3CC,KAAMC,KAAKC,UAAUgJ,KACtB/I,KAPH,uCAOQ,WAAMC,GAAN,eAAAC,EAAA,0DACAD,IAAOA,EAAIE,GADX,gCAEqBF,EAAIG,OAFzB,OAEMC,EAFN,OAGAtG,EAAS,CACLhD,KAAMkN,GACN/E,KAAMmB,EAAOnB,OALjB,sBAQAnF,EAAS,CACLhD,KAAMmN,KATV,2CAPR,uDAmBG1D,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMmN,SOxXV+E,CAAejR,EAAMsH,EAFC,KAAT4G,OAAc8C,EAAY9C,IAI3CwC,EAAQ,KAMC,UACG,cAAC,GAAD,CAAanD,SAAU,SAAAC,GAAOgD,EAAQhD,EAAE/C,OAAOlI,OAAQqO,GAAa,IAChErO,MAAOvC,EAAMA,KAAM,OAAQoO,YAAa,qBAAOrP,KAAM,SACzD,qBAAKX,UAAU,SACf,cAAC,GAAD,CAAkBmP,SAAU,SAAAC,GAAOiD,EAASjD,EAAE/C,OAAOlI,OAAQqO,GAAa,IACtErO,MAAO+E,EAAOtH,KAAM,QAASoO,YAAa,iCAASrP,KAAM,UAC7D,qBAAKX,UAAU,SACf,cAAC,GAAD,CAAamP,SAAU,SAAAC,GAAOkD,EAAQlD,EAAE/C,OAAOlI,OAAQqO,GAAa,IAChErO,MAAO2L,EAAMlO,KAAM,OAAQoO,YAAa,uCAAUrP,KAAM,aAC3D+R,GACG,sBAAM1S,UAAU,kDAAhB,uNAIHyS,GACG,sBAAMzS,UAAU,kDAAhB,wPAIHuS,GACG,sBAAKvS,UAAS,eAAUiE,KAAM6O,iBAA9B,UACI,cAAC,UAAD,CAAQnS,KAAK,UAAUc,KAAK,QAAQtB,QA5CxC,WAChBqS,GAAa,GACbH,EAASvJ,EAAKI,OACdkJ,EAAQtJ,EAAKlH,MACb0Q,EAAQ,KAwCY,8DAGA,cAAC,UAAD,CAAQ3R,KAAK,UAAUc,KAAK,QAA5B,2EAKX,sBAAMzB,UAAU,kDAAhB,+X,4CC3EF,SAAS+S,GAAT,GAAoH,IAA7FnO,EAA4F,EAA5FA,IAAKyC,EAAuF,EAAvFA,WACjC2L,EAAapO,EAAK,GAClBqO,EAAe5L,EAAY6L,MAAM,EAAG,GAEpCC,EAAc9L,EAAY,GAAKA,EAAY,GAAK,KAChD7F,EAAQ6F,EAAY6L,MAAM,EAAG7L,EAAYK,QAAQA,OACvD,OACI,sBAAK1H,UAAWiE,KAAMmP,gBAAtB,UACKJ,GACG,qBAAKhT,UAAWiE,KAAMoP,eAClBpP,MAAO,CACHqP,UAAU,sBACVC,OAAQ,IAHhB,SAKI,qBAEIvT,UAAWiE,KAAMvC,MACjBuC,MAAO,CACHuP,gBAAgB,OAAD,OAASR,EAAWtR,MAApB,KACf+R,eAAgB,QAChBC,mBAAoB,kBALnBV,EAAW1R,OAU3B2R,EAAa3Q,KAAI,SAACqR,EAAS5N,GACxB,OACI,qBAAK/F,UAAWiE,KAAMoP,eAElBpP,MAAO,CACHqP,UAAU,aAAD,OAA8B,KAAbvN,EAAQ,GAAzB,YACTwN,OAAQ,IAAMxN,EAAQ,IAJ9B,SAMI,qBAEI/F,UAAWiE,KAAMvC,MACjBuC,MAAO,CACHuP,gBAAgB,OAAD,cAASG,QAAT,IAASA,OAAT,EAASA,EAASjS,MAAlB,KACf+R,eAAgB,QAChBC,mBAAoB,kBAN5B,iBACYC,QADZ,IACYA,OADZ,EACYA,EAAS3N,QANhBD,MAiBhBoN,GAAyB,IAAV3R,GACZ,qBACIxB,UAAWiE,KAAM2P,WACjB3P,MAAO,CACHuP,gBAAgB,OAAD,OAASL,EAAYzR,MAArB,KACf+R,eAAgB,QAChBC,mBAAoB,iBAL5B,SAQI,qBAAK1T,UAAWiE,KAAM5C,WAAtB,SACI,sBAAMrB,UAAS,UAAKiE,KAAM4P,KAAX,kCAAf,oBAAqErS,YC7C9E,SAASsS,GAAT,GAAwD,IAA9BhT,EAA6B,EAA7BA,KAC/BT,EAAUC,cACZyT,EAAc,GAGdA,EADAC,OAAOC,SAASvT,SAASwT,SAAS,QACpB,QAEA,kBAUlB,IAAMC,GAAW,IAAIC,MAAOC,UAAYC,OAAOxT,EAAKyT,UAAUC,MAAM,KAAK,GAAGtB,MAAM,IAC5EuB,EAAO3T,EAAKyT,UAAUC,MAAM,KAAK,GAAGtB,MAAM,EAAG,GAE/CwB,EAAc,KACdP,EAAW,IACXO,EAAW,kCAEE,IAAbP,IACAO,EAAc,8CAED,IAAbP,IACAO,EAAc,kCAEdP,EAAW,IACXO,EAAW,UAAMP,EAAN,uDAEf,IAAQ5P,EAAUf,GAAY,SAACK,GAAD,OAC1BA,EAAMS,cADFC,MAGJ8C,EAAuC,GACvCG,EAAiC,GAErC1G,EAAKuD,YAAY4E,SAAQ,SAACtE,GACtBJ,EAAM0E,SAAQ,SAAC0K,GACPA,EAAQrS,MAAQqD,GAAuB,QAAjBgP,EAAQhT,MAC9B0G,EAAWlG,KAAKwS,GAEhBA,EAAQrS,MAAQqD,GAAuB,QAAjBgP,EAAQhT,MAC9B6G,EAAKrG,KAAKwS,SAKtB,IAAMhL,EAAatB,EAAWmB,QAAO,SAACC,EAAK3H,GAAN,OAAe2H,EAAM3H,EAAMiB,QAAO,GACnE,EAAIyF,EAAKgB,QAAO,SAACC,EAAK3H,GAAN,OAAe2H,EAAM3H,EAAMiB,QAAO,GAEtD,OACI,sBAAK/B,UAAS,UAAKiE,KAAM/D,UAAX,kBAAsCC,QA5CxD,WACIE,EAAQc,KAAK,CACTC,MAAO,CAAEC,WAAY,CAAEX,SAAUqT,IACjCrT,SAAS,GAAD,OAAKqT,EAAL,YAAoBjT,EAAKQ,QAyCrC,UACI,sBAAKtB,UAAWiE,KAAMwB,IAAtB,UACI,sBAAMzF,UAAU,gCAAhB,oBAAqDc,EAAKqJ,UAC1D,sBAAMnK,UAAU,gDAAhB,mBACQ0U,EADR,aACwBD,EADxB,iBAIJ,mBAAGzU,UAAU,kCAAb,SACKc,EAAKc,OAEV,mBAAG5B,UAAU,4BAAb,SACqB,SAAhBc,EAAKgQ,OAAoB,mDAA6B,YAAhBhQ,EAAKgQ,OAAuB,0DAAe,yCAEtF,sBAAK9Q,UAAWiE,KAAM0B,OAAtB,UACI,cAACoN,GAAD,CACInO,IAAK4C,EACLH,WAAYA,IAChB,sBAAKrH,UAAWiE,KAAM0Q,eAAtB,UACI,qBAAK3U,UAAU,qCAAf,SAAqD2I,IACrD,cAAC,gBAAD,CAAchI,KAAK,qBCrFhC,IAAMiU,GAA6C,sBAC7CC,GAAqD,0BACrDC,GAAiD,wBACjDC,GAA6C,sBAC7CC,GAA+C,uBAC/CC,GAAmC,iB,qBCDjC,SAASC,KACpB,IAAMvR,EAAWL,IAEjB0I,qBAAU,WAEN,OADArI,EAAS,CAAEhD,KAAMiU,KACV,WACHjR,EAAS,CAAEhD,KAAMqU,QAEtB,CAACrR,IAEJ,IAAMwR,EAAa3R,GAAY,SAACK,GAAD,OAC3BA,EAAMuR,GAAGC,YAGb,OACI,qBAAKrV,UAAWiE,KAAMqE,KAAtB,SACK6M,EAAW7S,KAAI,SAACxB,GAAD,OACZ,cAACgT,GAAD,CAA+BhT,KAAMA,GAAhBA,EAAKQ,U,6BCZnC,SAASgU,GAAT,GAAqE,IAA3CzV,EAA0C,EAA1CA,SAAa0V,EAA6B,mBAEjEzM,EAAStF,GAAY,SAACK,GAAD,OAC3BA,EAAMkF,YADAD,KAGR,OACE,cAAC,IAAD,2BACMyM,GADN,IAEEC,OAAQ,gBAAGvB,EAAH,EAAGA,SAAH,MACS,KAAfnL,EAAKI,OAA8B,KAAdJ,EAAKlH,KACxB/B,EAGA,cAAC,IAAD,CACE6P,GAAI,CAEFhP,SAAU,SAEVU,MAAO,CAAEuO,KAAMsE,U,4CClBd,SAASwB,GAAT,GAA8D,IAAzC7T,EAAwC,EAAxCA,KAAMjB,EAAkC,EAAlCA,KAAMoB,EAA4B,EAA5BA,MAAOL,EAAqB,EAArBA,MACnD,OACI,sBAAK1B,UAAWiE,KAAM/D,UAAtB,UACI,sBAAKF,UAAWiE,KAAMyR,SAAtB,UACI,qBAAK7T,IAAKH,EAAO1B,UAAWiE,KAAMvC,MAAOC,IAAKC,IAC9C,mBAAG5B,UAAU,mCAAb,SACK4B,OAGT,sBAAK5B,UAAWiE,KAAM0R,MAAtB,UACI,sBAAM3V,UAAU,qCAAhB,SACc,QAATW,EAAA,cAAwBoB,GAAxB,cAAyCA,KAE9C,cAAC,gBAAD,CAAcpB,KAAK,kBCfpB,SAASiV,KACpB,IAAMzT,EAAOwI,cAAPxI,GACAwB,EAAWL,IACX5C,EAAWsT,OAAOC,SAASvT,SAE7BC,EAAO,GAGPA,EADAD,EAASwT,SAAS,WACXU,GAEAC,GAGX7I,qBAAU,WAEN,OADArI,EAAS,CAAEhD,KAAMA,IACV,WACHgD,EAAS,CAAEhD,KAAMqU,QAEtB,CAACrR,IAEJ,IAAMkS,EAASrS,GAAY,SAACK,GAAD,OACvBA,EAAMuR,GAAGC,YACL9Q,EAAUf,GAAY,SAACK,GAAD,OAC1BA,EAAMS,cADFC,MAEFzD,EAAO+U,EAAOnR,QAAO,SAAA5D,GAAI,OAAIA,EAAKQ,MAAQa,KAAI,GAEpD,IAAKrB,EACD,OAAO,KAGX,IAAMgV,EAA6B,GAEnCvR,EAAM0E,SAAQ,SAAC8M,GACXjV,EAAKuD,YAAY4E,SAAQ,SAAC+M,GAClBD,EAAUzU,MAAQ0U,GAClBF,EAAe3U,KAAK4U,SAKhC,IAAI1O,EAAuC,GACvCG,EAAiC,GAErCsO,EAAe7M,SAAQ,SAAC0K,GACC,QAAjBA,EAAQhT,MACR0G,EAAWlG,KAAKwS,GAEC,QAAjBA,EAAQhT,MACR6G,EAAKrG,KAAKwS,MAIlB,IAAMhL,EAAatB,EAAWmB,QAAO,SAACC,EAAK3H,GAAN,OAAe2H,EAAM3H,EAAMiB,QAAO,GACnE,EAAIyF,EAAKgB,QAAO,SAACC,EAAK3H,GAAN,OAAe2H,EAAM3H,EAAMiB,QAAO,GAEhDoS,GAAW,IAAIC,MAAOC,UAAYC,OAAOxT,EAAKyT,UAAUC,MAAM,KAAK,GAAGtB,MAAM,IAC5EuB,EAAO3T,EAAKyT,UAAUC,MAAM,KAAK,GAAGtB,MAAM,EAAG,GAC/CwB,EAAc,KAclB,OAbIP,EAAW,IACXO,EAAc,kCAED,IAAbP,IACAO,EAAc,8CAED,IAAbP,IACAO,EAAc,kCAEdP,EAAW,IACXO,EAAW,UAAMP,EAAN,uDAIX,sBAAKnU,UAAWiE,KAAM/D,UAAtB,UACI,mBAAGF,UAAU,sCAAb,oBACSc,EAAKqJ,UAEd,oBAAInK,UAAU,kCAAd,SACKc,EAAKc,OAEV,mBAAG5B,UAAS,UAAKiE,KAAMgS,UAAX,oCAAZ,SACqB,SAAhBnV,EAAKgQ,OAAoB,mDAA6B,YAAhBhQ,EAAKgQ,OAAuB,0DAAe,yCAEtF,mBAAG9Q,UAAU,kCAAb,mDAGA,qBAAKA,UAAS,UAAKiE,KAAMiS,MAAX,UAAd,SACKJ,EAAexT,KAAI,SAACxB,EAAMiF,GAAP,OAChB,cAAC0P,GAAD,CAEI7T,KAAMd,EAAKc,KACXG,MAAOjB,EAAKiB,MACZpB,KAAMG,EAAKH,KACXe,MAAOZ,EAAKY,OAJPqE,QAQjB,sBAAK/F,UAAWiE,KAAM0B,OAAtB,UACI,sBAAM3F,UAAU,gDAAhB,mBACQ0U,EADR,aACwBD,EADxB,cAGA,sBAAKzU,UAAWiE,KAAM0Q,eAAtB,UACI,qBAAK3U,UAAU,qCAAf,SACK2I,IAEL,cAAC,gBAAD,CAAchI,KAAK,qBCrGxB,SAASwV,KACpB,IAAMhU,EAAK6R,OAAOC,SAASvT,SAAS8T,MAAM,WAAW,GAE/C7Q,EAAWL,IACXjD,EAAUC,cAER8V,EAAoB5S,GAAY,SAACK,GAAD,OACpCA,EAAMkF,YADFqN,gBAUJC,GAAY,EAOhB,OALIrC,OAAOC,SAASvT,SAASwT,SAAzB,0BAAqD/R,KACrD9B,EAAQqH,QAAU,IAClB2O,GAAY,GAIZ,sBAAKrW,UAAWiE,KAAMkB,cAAtB,UAEQkR,GAAa,sBAAKrW,UAAWiE,KAAMqS,cAAtB,UACT,cAAC,IAAD,CAAS5G,GAAG,WAAW6G,OAAK,EACxBvW,UAAS,UAAKiE,KAAMuS,KAAX,mDACTC,gBAAiBxS,KAAMyS,WAF3B,wDAMA,cAAC,IAAD,CAAShH,GAAG,kBACR1P,UAAS,UAAKiE,KAAMuS,KAAX,mDACTC,gBAAiBxS,KAAMyS,WACvBvW,QAAS,WAAQkW,GAAY,GAHjC,mGAOA,wBACIrW,UAAS,UAAKiE,KAAM0S,OAAX,mDACTxW,QAjCA,Wf2QQ,IAACyW,Ee1QzBjT,Gf0QyBiT,EezQd,WACHvW,EAAQI,QAAQ,WfyQrB,SAAUkD,GACbA,EAAS,CACLhD,KAAMwM,KAEVhE,MAAM,GAAD,OAAI3G,EAAJ,gBAAuB,CACxB4G,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BI,KAAMC,KAAKC,UAAU,CACjBwE,MAAO5E,aAAaC,QAAQ,oBAEjCI,KANH,uCAMQ,WAAMC,GAAN,SAAAC,EAAA,sDACJP,aAAapC,WAAW,gBACxBoC,aAAapC,WAAW,eACpB0C,GAAOA,EAAIE,IACXpG,EAAS,CACLhD,KAAMyM,KAEVwJ,KAEAjT,EAAS,CACLhD,KAAM0M,KAVV,2CANR,uDAmBGjD,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAM0M,YetQF,4CAMA,qBAAKrN,UAAU,UACf,mBAAGA,UAAU,kDAAb,kUAICoW,GACG,qCACI,sBAAMpW,UAAU,uDAAhB,otBAKA,qBAAKA,UAAU,eAM/B,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuW,OAAK,EAACM,KAAK,WAAlB,SACI,cAAC1E,GAAD,MAEJ,cAAC,IAAD,CAAOoE,OAAK,EAACM,KAAK,kBAAlB,SACI,cAAC3B,GAAD,MAEJ,cAACI,GAAD,CAAgBiB,OAAK,EAACM,KAAK,sBAA3B,SACI,cAACjB,GAAD,Y,4CC/EL,SAASkB,KACpB,IAAM3B,EAAa3R,GAAY,SAACK,GAAD,OAC3BA,EAAMuR,GAAGC,YAGb,OACI,qBAAKrV,UAAS,UAAKiE,KAAM/D,UAAX,UAAd,SACI,qBAAKF,UAAWiE,KAAMiS,MAAtB,SACKf,EAAW7S,KAAI,SAACxB,GAAD,OACZ,cAACgT,GAAD,CAA+BhT,KAAMA,GAAhBA,EAAKQ,Y,wBCT/B,SAASyV,KACpB,IAAM5B,EAAa3R,GAAY,SAACK,GAAD,OAC3BA,EAAMuR,GAAGC,YAEb,EAA8B7R,GAAY,SAACK,GAAD,OACtCA,EAAMuR,MADFO,EAAR,EAAQA,MAAOqB,EAAf,EAAeA,WAITC,EAAuC,GACvCC,EAA0C,GAkBhD,OAhBA/B,EAAWlM,SAAQ,SAACkO,GACI,SAAhBA,EAAKrG,QACLmG,EAAW9V,KAAKgW,GAEC,YAAhBA,EAAKrG,QACNoG,EAAc/V,KAAKgW,MAIvBF,EAAWvP,OAAS,IACpBuP,EAAWG,OAAO,IAElBF,EAAcxP,OAAS,IACvBuP,EAAWG,OAAO,IAIlB,sBAAKpX,UAAWiE,KAAM/D,UAAtB,UACI,sBAAKF,UAAWiE,KAAMqE,KAAtB,UACI,sBAAKtI,UAAU,OAAf,UACI,oBAAIA,UAAU,kCAAd,mDACCiX,EAAW3U,KAAI,SAAC6H,GAAD,OACZ,oBAEInK,UAAS,UAAKiE,KAAMoT,MAAX,uCAFb,SAGKlN,EAAQA,QAFJA,EAAQ7I,WAMzB,sBAAKtB,UAAWiE,KAAMqT,WAAtB,UACI,oBAAItX,UAAU,kCAAd,0DACCkX,EAAc5U,KAAI,SAAC6H,GAAD,OACf,oBAEInK,UAAS,UAAKiE,KAAMoT,MAAX,uCAFb,SAGKlN,EAAQA,QAFJA,EAAQ7I,cAO7B,sBAAKtB,UAAU,QAAf,UACI,mBAAGA,UAAU,6BAAb,oIAGA,qBAAKA,UAAS,UAAKiE,KAAMsT,SAAX,gCAAd,SAAkE5B,OAEtE,gCACI,mBAAG3V,UAAU,6BAAb,6HAGA,qBAAKA,UAAS,UAAKiE,KAAMsT,SAAX,gCAAd,SAAkEP,UC3DnE,SAASQ,KACpB,IAAM7T,EAAWL,IASjB,OAPA0I,qBAAU,WAEN,OADArI,EAAS,CAAEhD,KAAMkU,KACV,WACHlR,EAAS,CAAEhD,KAAMqU,QAEtB,CAACrR,IAGA,0BAAS3D,UAAWiE,KAAM/D,UAA1B,UACI,oBAAIF,UAAS,UAAKiE,KAAMzD,OAAX,oCAAb,uFACA,sBAAKR,UAAWiE,KAAMY,KAAtB,UACI,cAACiS,GAAD,IACA,cAACC,GAAD,UCuBhB,IAAMU,GAAS,WAAO,IAAD,EACb9T,EAAWL,IACX2Q,EAAWnF,cACXzO,EAAUC,cACVe,EAAU,UAAG4S,EAAS7S,aAAZ,aAAG,EAAgBC,WAC3BqW,EAASlU,GAAY,SAACK,GAAD,OAC3BA,EAAM8T,SADAD,KASR,OAAO,qCACL,sBAAK1X,UAAU,OAAOmC,GAAG,OAAzB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAQ8R,SAAQ,OAAE5S,QAAF,IAAEA,IAAc4S,EAAhC,UACE,cAAC,IAAD,CAAOsC,OAAK,EAACM,KAAK,SAAlB,SACE,cAACjI,GAAD,MAEF,cAAC,IAAD,CAAO2H,OAAK,EAACM,KAAK,YAAlB,SACE,cAACzG,GAAD,MAEF,cAAC,IAAD,CAAOmG,OAAK,EAACM,KAAK,kBAAlB,SACE,cAACnG,GAAD,MAEF,cAAC,IAAD,CAAO6F,OAAK,EAACM,KAAK,kBAAlB,SACE,cAAC9F,GAAD,MAEF,cAACuE,GAAD,CAAgBuB,KAAK,WAArB,SACE,cAACV,GAAD,MAEF,cAAC,IAAD,CAAOI,OAAK,EAACM,KAAK,mBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAON,OAAK,EAACM,KAAK,QAAlB,SACE,cAACW,GAAD,MAEF,cAAC,IAAD,CAAOjB,OAAK,EAACM,KAAK,YAAlB,SACE,cAACjB,GAAD,MAEF,cAACN,GAAD,CAAgBiB,OAAK,EAACM,KAAK,sBAA3B,SACE,cAACjB,GAAD,MAGF,eAAC,IAAD,CAAOW,OAAK,EAACM,KAAM,CAAC,IAAK,WAAzB,UACE,sBAAM7W,UAAW4X,IAAS/S,KAA1B,SACE,eAACgT,EAAA,EAAD,CAAaC,QAASC,IAAtB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,SAIFL,GACA,cAAC,GAAD,CACEnL,OAAO,0BACP/L,OAAO,GACPkL,WAlDZ,WACE/H,EAAS,CACPhD,KAAMkC,KA6CA,SAKE,cAAC,GAAD,eAORxB,GACA,cAAC,IAAD,CAAOwV,KAAK,mBAAZ,SACE,cAAC,GAAD,CAAOtK,OAAO,0BACZ/L,OAAQ,0GACRkL,WAAY,kBAAMrL,EAAQI,QAAQ,MAFpC,SAGE,cAAC,GAAD,QAKJY,GACA,cAAC,IAAD,CAAOwV,KAAK,YAAZ,SACE,cAAC,GAAD,CAAOtK,OAAO,0BACZ/L,OAAQ,GACRkL,WAAY,kBAAMrL,EAAQI,QAAQ,UAFpC,SAGE,cAACmV,GAAD,QAKJvU,GACA,cAACiU,GAAD,CAAgBuB,KAAK,sBAArB,SACE,cAAC,GAAD,CAAOtK,OAAO,0BACZ/L,OAAQ,GACRkL,WAAY,kBAAMrL,EAAQI,QAAQ,oBAFpC,SAGE,cAACmV,GAAD,YAOKoC,GArHf,WACE,IAAMrU,EAAWL,IAUjB,OARA0I,qBAAU,WACRrI,GjCTO,SAAUA,GACbA,EAAS,CACLhD,KAAM8B,IAGV0G,MAAM,GAAD,OAAI3G,EAAJ,iBAAuBoH,KAA5B,uCAAiC,WAAMC,GAAN,eAAAC,EAAA,0DACzBD,IAAOA,EAAIE,GADc,gCAEJF,EAAIG,OAFA,OAEnBC,EAFmB,OAGzBtG,EAAS,CACLhD,KAAM+B,EACN6B,MAAO0F,EAAOhI,OALO,sBAQzB0B,EAAS,CACLhD,KAAMgC,IATe,2CAAjC,uDAYGyH,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMgC,YiCTjB,CAACgB,IAEJqI,qBAAU,WACRrI,GnBqOO,SAAUA,GACbA,EAAS,CACLhD,KAAMqM,KAEVoB,GAAe,GAAD,OAAI5L,EAAJ,cAAqB,CAC/B4G,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,GAAD,OAAKC,aAAaC,QAAQ,mBAE5CI,MAAK,SAAA2E,GACJ5K,EAAS,CACLhD,KAAMsM,GACNnE,KAAMyF,EAAOzF,UAElBsB,OAAM,SAAAC,GACL1G,EAAS,CACLhD,KAAMuM,cmBnPlB,cAAC,IAAD,UACE,cAAC,GAAD,OC1BS+K,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBvO,MAAK,YAAkD,IAA/CwO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCgBd,SAASvQ,GAASlD,EAAiB4B,EAAmBC,GAClD,IAAMmS,EAAWhU,EAAI4B,GAGrB,OAFA5B,EAAI2S,OAAO/Q,EAAW,GACtB5B,EAAI2S,OAAO9Q,EAAY,EAAGmS,GACnBhU,EAYJ,IAAMiU,GAAoD,CAC7DnU,MAAO,GACPiD,KAAM,GACNH,WAAY,GACZsR,WAAW,EACXC,kBAAkB,GA8EhBC,GAAiC,CACnCC,kBAAmB,GACnBpB,MAAM,EACNpN,QAAS,MAgCPyO,GAAiC,CACnC7O,YAAa,KACb8O,gBAAgB,EAChBpQ,uBAAuB,GAoCrBqQ,GAA6B,CAC/BrV,QAAS,kCC9IAsV,GAA+B,CACxCpQ,KAAM,CACFlH,KAAM,GACNsH,MAAO,IAEXiQ,gBAAgB,EAChB1I,kBAAkB,EAClBD,iBAAiB,EAEjB4I,iBAAiB,EACjB3J,kBAAkB,EAClBD,mBAAmB,EAEnB6J,gBAAgB,EAChBC,qBAAqB,EACrBC,sBAAsB,EAEtBC,eAAe,EACfC,kBAAkB,EAClBrD,iBAAiB,EAEjBsD,kBAAkB,EAClB7I,wBAAwB,EACxBD,uBAAuB,EAEvB+I,kBAAkB,EAClB3I,wBAAwB,EACxBC,uBAAuB,EAEvB2I,mBAAmB,EACnBlH,yBAAyB,EACzBD,wBAAwB,GC9EfoH,GAAyB,CAClCC,aAAa,EACbzE,SAAU,GACVM,MAAO,EACPqB,WAAY,GCTH+C,GAAcC,aAAgB,CACvC1V,WH2C6B,WAAsF,IAArFlD,EAAoF,uDAA5EsX,GAAyBxH,EAAmD,uCAClH,OAAQA,EAAOvQ,MACX,KAAK8B,EACD,OAAO,2BACArB,GADP,IAEIuX,WAAW,IAGnB,KAAKjW,EACD,OAAO,2BACAtB,GADP,IAEIuX,WAAW,EACXC,kBAAkB,EAClBrU,MAAO2M,EAAO3M,QAGtB,KAAK5B,EACD,OAAO,2BACAvB,GADP,IAEIuX,WAAW,EACXC,kBAAkB,IAG1B,KAAK9V,EACD,OAAO,2BACA1B,GADP,IAEIoG,KAAK,aAAKpG,EAAMmD,MAAMG,QAAO,SAAA5D,GAAI,OAAIA,EAAKQ,MAAQ4P,EAAO5P,KACvC,QAAdR,EAAKH,SACT4D,MAAO,aAAInD,EAAMmD,OAAOjC,KAAI,SAAAxB,GAAI,MAAkB,QAAdA,EAAKH,KACrCG,EAAKQ,MAAQ4P,EAAO5P,IAApB,2BAA+BR,GAA/B,IAAqCS,IAAK,IAA1C,2BAAqDT,GAArD,IAA2DS,IAAK,IAAOT,OAKnF,KAAKiC,EACD,OAAO,2BACA3B,GADP,IAEIiG,WAAY,uBAAIjG,EAAMiG,YAAV,aAAyBjG,EAAMmD,MAAMG,QAAO,SAAA5D,GAAI,OAAIA,EAAKQ,MAAQ4P,EAAO5P,KAClE,QAAdR,EAAKH,UAAiB2B,KAAI,SAAAxB,GAAI,OAC1BA,EAAKQ,MAAQ4P,EAAO5P,IAApB,2BAA+BR,GAA/B,IAAqCkF,KAAMmC,iBAAcrH,KACjEyD,MAAO,aAAInD,EAAMmD,OAAOjC,KAAI,SAAAxB,GAAI,OAC5BA,EAAKQ,MAAQ4P,EAAO5P,IAApB,2BAA+BR,GAA/B,IAAqCS,MAAOT,EAAKS,MAAQT,OAKrE,KAAKkC,EACD,OAAO,2BACA5B,GADP,IAEIiG,WAAYjG,EAAMiG,WAAW3C,QACzB,SAAC5D,GAAD,OAAUA,EAAKkF,OAASkL,EAAOlL,QAEnCzB,MAAO,aAAInD,EAAMmD,OAAOjC,KAAI,SAAAxB,GAAI,OAC5BA,EAAKQ,MAAQ4P,EAAO5P,IAApB,2BAA+BR,GAA/B,IAAqCS,MAAOT,EAAKS,MAAQT,OAIrE,KAAKmC,EACD,OAAO,2BACA7B,GADP,IAEIiG,WAAYM,GAAS,aAAIvG,EAAMiG,YAAa6J,EAAO7K,UAAW6K,EAAO5K,cAG7E,QACI,OAAOlF,IG1GfuW,MH2HwB,WAAmE,IAAlEvW,EAAiE,uDAAzDyX,GAAmB3H,EAAsC,uCAC1F,OAAQA,EAAOvQ,MACX,KAAKiC,EACD,OAAO,2BACAxB,GADP,IAEIsW,MAAM,EACNpN,QAAS4G,EAAO5G,UAGxB,KAAKzH,EACD,OAAO,2BACAzB,GADP,IAEIsW,MAAM,EACNpN,QAAS,KACTwO,kBAAmB,KAG3B,QACI,OAAO1X,IG5IfyH,MH6JwB,WAAmE,IAAlEzH,EAAiE,uDAAzD2X,GAAmB7H,EAAsC,uCAC1F,OAAQA,EAAOvQ,MACX,KAAKuC,EACD,OAAO,2BACA9B,GADP,IAEI4X,gBAAgB,IAGxB,KAAK7V,EACD,OAAO,2BACA/B,GADP,IAEI4X,gBAAgB,EAChBpQ,uBAAuB,EACvBsB,YAAagH,EAAOhH,cAG5B,KAAK9G,EACD,OAAO,2BACAhC,GADP,IAEI4X,gBAAgB,EAChBpQ,uBAAuB,IAG/B,QACI,OAAOxH,IGpLf0C,WHiMsB,WAA+D,IAA9D1C,EAA6D,uDAArD6X,GAAiB/H,EAAoC,uCACpF,OAAQA,EAAOvQ,OACN0C,EACM,2BACAjC,GADP,IAEIwC,QAASsN,EAAOtN,UAIbxC,GGzMf2H,SFiFsB,WAAiE,IAAhE3H,EAA+D,uDAAvD8X,GAAkBhI,EAAqC,uCACtF,OAAQA,EAAOvQ,MACX,KAAK+L,GACD,OAAO,2BACAtL,GADP,IAEI+X,gBAAgB,EAChB1I,kBAAkB,IAG1B,KAAK9D,GACD,OAAO,2BACAvL,GADP,IAEI+X,gBAAgB,EAChB3I,iBAAiB,EACjBC,kBAAkB,EAClB3H,KAAMoI,EAAOpI,OAGrB,KAAK8D,GACD,OAAO,2BACAxL,GADP,IAEI+X,gBAAgB,EAChB3I,iBAAiB,EACjBC,kBAAkB,IAG1B,KAAK5D,GACD,OAAO,2BACAzL,GADP,IAEIgY,iBAAiB,EACjB5J,mBAAmB,IAG3B,KAAK1C,GACD,OAAO,2BACA1L,GADP,IAEIgY,iBAAiB,EACjB3J,kBAAkB,EAClBD,mBAAmB,EACnB1G,KAAMoI,EAAOpI,OAGrB,KAAKiE,GACD,OAAO,2BACA3L,GADP,IAEIgY,iBAAiB,EACjB3J,kBAAkB,EAClBD,mBAAmB,IAG3B,KAAKxC,GACD,OAAO,2BACA5L,GADP,IAEIiY,gBAAgB,EAChB7I,iBAAiB,EACjB+I,sBAAsB,IAG9B,KAAKtM,GACD,OAAO,2BACA7L,GADP,IAEIiY,gBAAgB,EAChB7I,iBAAiB,EACjB1H,KAAMoI,EAAOpI,KACbyQ,sBAAsB,IAG9B,KAAKrM,GACD,OAAO,2BACA9L,GADP,IAEIiY,gBAAgB,EAChB7I,iBAAiB,EACjB1H,KAAM,CACFlH,KAAM,GACNsH,MAAO,IAEXqQ,sBAAsB,IAG9B,KAAKpM,GACD,OAAO,2BACA/L,GADP,IAEIoY,eAAe,EACfC,kBAAkB,IAG1B,KAAKrM,GACD,OAAO,2BACAhM,GADP,IAEIoY,eAAe,EACfC,kBAAkB,EAClBrD,iBAAiB,EACjBtN,KAAM,CACFlH,KAAM,GACNsH,MAAO,MAInB,KAAKmE,GACD,OAAO,2BACAjM,GADP,IAEIoY,eAAe,EACfC,kBAAkB,EAClBrD,iBAAiB,IAGzB,KAAK9I,GACD,OAAO,2BACAlM,GADP,IAEIsY,kBAAkB,EAClB7I,wBAAwB,EACxBD,uBAAuB,IAG/B,KAAKrD,GACD,OAAO,2BACAnM,GADP,IAEIsY,kBAAkB,EAClB7I,wBAAwB,EACxBD,uBAAuB,IAG/B,KAAKpD,GACD,OAAO,2BACApM,GADP,IAEIsY,kBAAkB,EAClB7I,wBAAwB,EACxBD,uBAAuB,IAG/B,KAAKnD,GACD,OAAO,2BACArM,GADP,IAEIuY,kBAAkB,EAClB3I,wBAAwB,EACxBC,uBAAuB,IAG/B,KAAKvD,GACD,OAAO,2BACAtM,GADP,IAEIuY,kBAAkB,EAClB3I,wBAAwB,EACxBC,uBAAuB,IAG/B,KAAKtD,GACD,OAAO,2BACAvM,GADP,IAEIuY,kBAAkB,EAClB3I,wBAAwB,EACxBC,uBAAuB,IAG/B,KAAKrD,GACD,OAAO,2BACAxM,GADP,IAEIwY,mBAAmB,EACnBlH,yBAAyB,EACzBD,wBAAwB,IAGhC,KAAK5E,GACD,OAAO,2BACAzM,GADP,IAEIwY,mBAAmB,EACnBlH,yBAAyB,EACzBD,wBAAwB,EACxB3J,KAAMoI,EAAOpI,OAGrB,KAAKgF,GACD,OAAO,2BACA1M,GADP,IAEIwY,mBAAmB,EACnBlH,yBAAyB,EACzBD,wBAAwB,IAIhC,QACI,OAAOrR,IErQfgU,GDOqB,WAAyD,IAAxDhU,EAAuD,uDAA/CyY,GAAc3I,EAAiC,uCAC7E,OAAQA,EAAOvQ,MAGX,KAAKmU,GACD,OAAO,2BACA1T,GADP,IAEI6O,WAAO2C,EACPkH,aAAa,IAKrB,KAAK/E,GACD,OAAO,2BACA3T,GADP,IAEI6O,MAAOiB,EAAO+I,QACdH,aAAa,IAKrB,KAAK9E,GACD,OAAO,2BACA5T,GADP,IAEI6O,WAAO2C,EACPkH,aAAa,IAMrB,KAAK7E,GACD,IAAQY,EAAW3E,EAAO+I,QAAlBpE,OACR,OAAO,2BACAzU,GADP,IAEI6O,WAAO2C,EACPyC,SAAUQ,EACVF,MAAOzE,EAAO+I,QAAQtE,MACtBqB,WAAY9F,EAAO+I,QAAQjD,aAEnC,QACI,OAAO5V,M,yBEtDN8Y,GAAmB,SAACC,EAAeC,GAC5C,OAAQ,SAACvW,GACL,IAAIwW,EAA2B,KAE/B,OAAO,SAAAC,GAAI,OAAI,SAACpJ,GACZ,IAAQvN,EAAaE,EAAbF,SACAhD,EAASuQ,EAATvQ,KACA4Z,EAA2DH,EAA3DG,OAAQC,EAAmDJ,EAAnDI,UAAWC,EAAwCL,EAAxCK,OAAQC,EAAgCN,EAAhCM,QAASC,EAAuBP,EAAvBO,QAASC,EAAcR,EAAdQ,UAMrD,GAJIja,IAAS6Z,IAETH,EAAS,IAAIQ,UAAJ,UAAiBV,EAAjB,UAETxZ,IAAS4Z,EAAQ,CAAC,IAAD,EAEXpM,EAAK,UAAG5E,aAAaC,QAAQ,sBAAxB,aAAG,EAAqCgL,MAAM,UAAU,GAAGA,MAAM,KAAK,GACjF6F,EAAS,IAAIQ,UAAJ,UAAiBV,EAAjB,kBAAgChM,IAEzCkM,IAEAA,EAAOS,OAAS,SAAAhP,GACZnI,EAAS,CAAEhD,KAAM8Z,EAAQR,QAASnO,KAItCuO,EAAOU,QAAU,SAAAjP,GACbnI,EAAS,CAAEhD,KAAMga,EAASV,QAASnO,KAIvCuO,EAAOW,UAAY,SAAAlP,GACf,IAAQ7J,EAAS6J,EAAT7J,KACFgZ,EAAavR,KAAKwR,MAAMjZ,GACVkZ,GAAmBF,EAA/BG,QAAR,aAAuCH,EAAvC,KACAtX,EAAS,CAAEhD,KAAMia,EAAWX,QAASkB,KAIzCd,EAAOgB,QAAU,SAAAvP,GACbuO,EAAQ7N,QACR7I,EAAS,CAAEhD,KAAM+Z,EAAST,QAASnO,MAI3CwO,EAAKpJ,OCnCXiJ,GzCde,yCyCgBfC,GAAuB,CACzBG,OAAQ3F,GACR4F,UAAW3F,GACX4F,OAAQ3F,GACR4F,QAAS1F,GACT2F,QAAS5F,GACT6F,UAAW3F,ICwCFpR,GDrCY,eAACgW,EAAD,uDAAgB,GAAhB,OACrByB,aACIvB,GACAF,EACA0B,aAAQC,aAAgBC,KAAiBvB,GAAiBC,GAAOC,OCiCpDsB,GAErBvP,IAASqJ,OACP,cAAC,IAAMmG,WAAP,UACE,cAAC,IAAD,CAAU9X,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJmB,SAASC,eAAe,SAM1BgT,M,mBC5EAxY,EAAOC,QAAU,CAAC,QAAU,mCAAmC,WAAa,sCAAsC,eAAiB,0CAA0C,MAAQ,mC,mBCArLD,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,cAAgB,+BAA+B,KAAO,sBAAsB,WAAa,4BAA4B,OAAS,0B,mBCA/LD,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,WAAa,oCAAoC,KAAO,8BAA8B,UAAY,mCAAmC,SAAW,oC,mBCAzMD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oBAAoB,QAAU,yB,mBCA7HD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,eAAiB,qCAAqC,OAAS,6BAA6B,UAAY,kC,mBCA9JD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,MAAQ,8BAA8B,eAAiB,uCAAuC,KAAO,+B,mBCArKD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,KAAO,uBAAuB,QAAU,4B,mBCAtID,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,4BAA4B,QAAU,iC,mBCArJD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,4BAA4B,QAAU,iC,mBCArJD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,6BAA6B,OAAS,gCAAgC,eAAiB,0C,mBCA9JD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,UAAY,6BAA6B,SAAW,4BAA4B,MAAQ,2B,mBCA3ID,EAAOC,QAAU,CAAC,OAAS,0BAA0B,UAAY,6BAA6B,KAAO,wBAAwB,QAAU,6B,mBCAvID,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,6B,mBCAzGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,OAAS,sBAAsB,MAAQ,uB,mBCA1FD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,uB,mBCAzFD,EAAOC,QAAU,CAAC,QAAU,mCAAmC,cAAgB,2C,mBCA/ED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,gBAAkB,uC,mBCArED,EAAOC,QAAU,CAAC,UAAY,kC","file":"static/js/main.862172c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"headerItem_container__3FwvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientContainer\":\"ingredientContainer_ingredientContainer__3wxZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burgerConstructor_section__U7oCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"orderList_list__1A-51\",\"item\":\"orderList_item__1XREq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderContainer\":\"fillingContainer_orderContainer__2tVC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"totalBlock_container__2pUEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modalOverlay_container__3SzjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"profileOrders_list__2qHhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentContainer\":\"imgStackRow_parentContainer__2Ehz4\",\"imageContainer\":\"imgStackRow_imageContainer__3GVcv\",\"image\":\"imgStackRow_image__Sa0l0\",\"image_last\":\"imgStackRow_image_last__2Wqg5\",\"span\":\"imgStackRow_span__3CJ3m\",\"background\":\"imgStackRow_background__dwm7l\"};","import React from 'react';\nimport headerItemStyle from './headerItem.module.css';\n\ninterface HeaderItemProps {\n    clickFunc?: (e: any) => void | undefined\n    children: React.ReactNode\n    styles: string\n    text: string\n}\n\nfunction HeaderItem({ clickFunc, children, styles, text }: HeaderItemProps) {\n    return (\n        <button className={`${headerItemStyle.container} pt-4 pb-4 pr-5 pl-5 mt-4 mb-4 ml-5 mr-2`}\n            onClick={clickFunc}>\n            {children}\n            <div className={`text ml-2 ${styles}`}>{text}</div>\n        </button>\n    );\n}\n\nexport default HeaderItem\n","import React from 'react';\nimport headerStyle from './appHeader.module.css';\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '../../index';\nimport HeaderItem from './header-item/headerItem';\nimport { useHistory } from 'react-router';\n\nfunction AppHeader() {\n    const history = useHistory();\n    const openProfile = () => {\n        history.replace({ pathname: '/profile' })\n    }\n    const openConstructor = () => {\n        history.replace({ pathname: '/' })\n    }\n    const openFeed = () => {\n        history.replace({ pathname: '/feed' })\n    }\n\n\n    return (\n        <header className={`${headerStyle.header} mt-10`}>\n            <nav className={headerStyle.container}>\n                <HeaderItem\n                    text='Конструктор'\n                    styles='text_type_main-default text_color_inactive'\n                    clickFunc={openConstructor}\n                >\n                    <BurgerIcon type=\"primary\" />\n                </HeaderItem>\n                <HeaderItem text='Лента заказов'\n                    styles='text_type_main-default text_color_inactive'\n                    clickFunc={openFeed}\n                >\n                    <ListIcon type=\"secondary\" />\n                </HeaderItem>\n            </nav>\n            <div className={headerStyle.logo}>\n                <Logo />\n            </div>\n            <HeaderItem\n                text='Личный кабинет'\n                styles='text_type_main-default text_color_inactive profile'\n                clickFunc={openProfile}\n            >\n                <ProfileIcon type=\"secondary\" />\n            </HeaderItem>\n        </header>\n    );\n}\n\nexport default AppHeader","import React from \"react\";\nimport ingredientStyle from './ingredientItem.module.css';\nimport { CurrencyIcon, Counter } from '../../../index';\nimport { useDrag } from \"react-dnd\";\nimport { useHistory } from 'react-router-dom';\nimport { ItemType } from \"../../../utils/ts-types\";\n\n\ninterface IngredientItemProps {\n    item: ItemType\n}\n\nfunction IngredientItem({ item }: IngredientItemProps) {\n    const history = useHistory();\n    const [, dragRef] = useDrag({\n        type: \"ingredients\",\n        item: { item }\n    });\n\n    function openModal() {\n        history.push({\n            state: { background: { pathname: '/' } },\n            pathname: `/ingredients/${item._id}`,\n        });\n    }\n\n    return (\n        <div ref={dragRef} className={ingredientStyle.container} onClick={openModal}>\n            {\n                item.__v !== 0 &&\n                <Counter count={item.__v} size=\"default\" />\n            }\n            <img className={`${ingredientStyle.image} ml-4 mb-1 mr-4`} alt={item.name} src={item.image} />\n            <div className={`${ingredientStyle.priceContainer} mb-1`}>\n                <span className='text text_type_digits-default mr-2'>{item.price}</span>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n            <div className={`${ingredientStyle.name} text text_type_main-default`}>\n                {item.name}\n            </div>\n        </div>\n    )\n}\n\nexport default IngredientItem","import React, { useRef } from \"react\";\nimport containerStyle from './ingredientContainer.module.css';\nimport IngredientItem from '../ingredient-item/ingredientItem';\nimport { ItemType } from \"../../../utils/ts-types\";\n\n\ninterface IngredientContainerProps {\n    data: ItemType[]\n    type: string\n    text: string\n}\n\nfunction IngredientContainer({ data, type, text }: IngredientContainerProps) {\n    const ref = useRef(null);\n\n    return (\n        <div className='mt-10 mb-10' id={type} ref={ref}>\n            <h3 className='text text_type_main-medium'>{text}</h3>\n            <div className={`${containerStyle.ingredientContainer} mt-6 mb-10 ml-4 mr-1`}>\n                {data.map((item) => (\n                    <React.Fragment key={item._id}>\n                        <IngredientItem item={item} />\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default IngredientContainer","export const URL = 'https://norma.nomoreparties.space/api';\nexport const WSURL = 'wss://norma.nomoreparties.space/orders';","import { AppDispatch, AppThunk } from '../../utils';\nimport { ItemType } from '../../utils/ts-types';\nimport { URL } from '../../utils/url';\n\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\n\nexport interface IGetIngredientsRequestAction {\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccessAction {\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\n    readonly items: ItemType[];\n}\n\nexport interface IGetIngredientsFailedAction {\n    readonly type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport const getIngredients: AppThunk = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_INGREDIENTS_REQUEST\n        })\n\n        fetch(`${URL}/ingredients`).then(async res => {\n            if (res && res.ok) {\n                const parsed = await res.json();\n                dispatch({\n                    type: GET_INGREDIENTS_SUCCESS,\n                    items: parsed.data\n                })\n            } else {\n                dispatch({\n                    type: GET_INGREDIENTS_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: GET_INGREDIENTS_FAILED\n            })\n        })\n    }\n}\n\nexport const SHOW_MODAL: 'SHOW_MODAL' = 'SHOW_MODAL';\nexport const HIDE_MODAL: 'HIDE_MODAL' = 'HIDE_MODAL';\nexport const ADD_BUN_TO_ODER: 'ADD_BUN_TO_ODER' = 'ADD_BUN_TO_ODER';\nexport const ADD_INGREDIENT_TO_ORDER: 'ADD_INGREDIENT_TO_ORDER' = 'ADD_INGREDIENT_TO_ORDER';\nexport const REMOVE_FROM_ORDER: 'REMOVE_FROM_ORDER' = 'REMOVE_FROM_ORDER';\nexport const MOVE_ITEM_IN_ORDER: 'MOVE_ITEM_IN_ORDER' = 'MOVE_ITEM_IN_ORDER';\n\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\n\nexport interface IShowModalAction {\n    readonly type: typeof SHOW_MODAL;\n    readonly content: any;\n}\n\nexport interface IHideModalAction {\n    readonly type: typeof HIDE_MODAL;\n}\n\nexport interface IAddBunToOrderAction {\n    readonly type: typeof ADD_BUN_TO_ODER;\n    readonly _id: string;\n}\n\nexport interface IAddIngredientToOrderAction {\n    readonly type: typeof ADD_INGREDIENT_TO_ORDER;\n    readonly _id: string;\n}\n\nexport interface IRemoveFromOrderAction {\n    readonly _key: string;\n    readonly type: typeof REMOVE_FROM_ORDER;\n    readonly _id: string;\n    readonly index: number;\n}\n\nexport interface IMoveItemInOrderAction {\n    readonly type: typeof MOVE_ITEM_IN_ORDER;\n    readonly dragIndex: number;\n    hoverIndex: number;\n}\n\nexport interface IGetOrderRequestAction {\n    readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderSuccessAction {\n    readonly type: typeof GET_ORDER_SUCCESS;\n    readonly orderNumber: number\n}\n\nexport interface IGetOrderFailedAction {\n    readonly type: typeof GET_ORDER_FAILED;\n}\n\n\nexport const postOrder: AppThunk = (data: Array<string>) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_ORDER_REQUEST\n        })\n        fetch(`${URL}/orders`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `${localStorage.getItem('accessToken')}`\n            },\n            body: JSON.stringify({\n                ingredients: data,\n            })\n        }).then(async res => {\n            if (res && res.ok) {\n                const parsed = await res.json();\n                dispatch({\n                    type: GET_ORDER_SUCCESS,\n                    orderNumber: parsed.order.number\n                })\n            } else {\n                dispatch({\n                    type: GET_ORDER_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: GET_ORDER_FAILED\n            })\n        })\n    }\n}\n\nexport const CHANDGE_CURRENT_TAB = 'CHANDGE_CURRENT_TAB'\n\nexport interface IChangeCurrentTabAction {\n    readonly current: string;\n    readonly type: typeof CHANDGE_CURRENT_TAB;\n}\n\nexport type TItemActions =\n    IChangeCurrentTabAction |\n    IGetOrderFailedAction |\n    IGetOrderRequestAction |\n    IGetOrderSuccessAction |\n    IGetOrderFailedAction |\n    IMoveItemInOrderAction |\n    IMoveItemInOrderAction |\n    IRemoveFromOrderAction |\n    IAddIngredientToOrderAction |\n    IAddBunToOrderAction |\n    IHideModalAction |\n    IShowModalAction |\n    IGetIngredientsFailedAction |\n    IGetIngredientsSuccessAction |\n    IGetIngredientsRequestAction;\n\n\n\n","import {\n    TypedUseSelectorHook,\n    useDispatch as dispatchHook,\n    useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from '../utils';\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import React, { useRef } from \"react\";\nimport burgerIngredientsStyle from './burgerIngredients.module.css';\nimport IngredientContainer from './ingredient-container/ingredientContainer'\nimport { Tab } from '../../index';\nimport { CHANDGE_CURRENT_TAB } from '../../services/actions/item';\nimport { ItemType } from \"../../utils/ts-types\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\n\n\nfunction BurgerIngredients() {\n  const dispatch = useDispatch();\n  const current = useSelector((store) =>\n    store.currentTab.current)\n\n  const changeCurrent = (current: string) => {\n    dispatch({\n      type: CHANDGE_CURRENT_TAB,\n      current\n    })\n  }\n\n  function TabUse() {\n    return (\n      <div style={{ display: 'flex' }}>\n        <Tab value=\"Булки\" active={current === 'Булки'} onClick={changeCurrent}>\n          Булки\n        </Tab>\n        <Tab value=\"Соусы\" active={current === 'Соусы'} onClick={changeCurrent}>\n          Соусы\n        </Tab>\n        <Tab value=\"Начинки\" active={current === 'Начинки'} onClick={changeCurrent}>\n          Начинки\n        </Tab>\n      </div>\n    )\n  }\n\n  const ingredients = useSelector((store) =>\n    store.ingredient.items\n  )\n\n  function getData(arr: ItemType[], type: string) {\n    return arr.filter((el) => el.type === type);\n  }\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const bun = getData(ingredients, 'bun');\n  const main = getData(ingredients, 'main');\n  const sauce = getData(ingredients, 'sauce');\n\n  const bunContainer: HTMLElement | null = document.getElementById('bun');\n  const sauceContainer: HTMLElement | null = document.getElementById('sauce');\n  const mainContainer: HTMLElement | null = document.getElementById('main');\n\n  const returnTop = () => {\n    let parentPosition = ref.current!.getBoundingClientRect().top;\n    let bunPosition = bunContainer!.getBoundingClientRect().bottom - parentPosition;\n    let saucePosition = sauceContainer!.getBoundingClientRect().bottom - parentPosition;\n    let mainPosition = mainContainer!.getBoundingClientRect().bottom - parentPosition;\n\n    if (bunPosition > 0) {\n      changeCurrent('Булки');\n    }\n    if (bunPosition < 0 && saucePosition > 0 && saucePosition > parentPosition) {\n      changeCurrent('Соусы');\n    }\n    if (bunPosition < 0 && saucePosition < 0 && mainPosition > parentPosition) {\n      changeCurrent('Начинки');\n    }\n  }\n\n  return (\n    <section className={`${burgerIngredientsStyle.section} mr-10`} id='dragSection'>\n      <h1 className='text text_type_main-large mt-10 mb-5'>Соберите бургер</h1>\n      <TabUse />\n      <div className={burgerIngredientsStyle.mainContainer} onScroll={returnTop} ref={ref}>\n        <IngredientContainer text='Булки' data={bun} type='bun' />\n        <IngredientContainer text='Соусы' data={sauce} type='sauce' />\n        <IngredientContainer text='Начинки' data={main} type='main' />\n      </div>\n    </section>\n  )\n}\n\nexport default BurgerIngredients\n","import React, { useRef } from \"react\";\nimport { ConstructorElement, DragIcon } from '../../../../../index';\nimport { useDrag, useDrop } from \"react-dnd\";\nimport {\n    REMOVE_FROM_ORDER,\n    MOVE_ITEM_IN_ORDER\n} from \"../../../../../services/actions/item\";\nimport { ItemType } from \"../../../../../utils/ts-types\";\nimport { useDispatch } from \"../../../../../services/hooks\";\n\n\n\ninterface ItemTypeWhithIndex {\n    _id: string;\n    name: string;\n    type: string;\n    proteins: number;\n    fat: number;\n    carbohydrates: number;\n    calories: number;\n    price: number;\n    image: string;\n    image_mobile: string;\n    image_large: string;\n    __v: number;\n    index: number\n}\n\ninterface FillingItemProps {\n    item: ItemType\n    index: number\n    _key?: string\n}\n\nexport default function FillingItem({ item, index, _key }: FillingItemProps) {\n    const ref = useRef<HTMLDivElement>(null);\n    const dispatch = useDispatch();\n\n    const removeItem = (_id: string, index: number, _key: string) => {\n        dispatch({\n            type: REMOVE_FROM_ORDER,\n            _id,\n            index,\n            _key\n        })\n    }\n\n    const [, drop] = useDrop({\n        accept: 'filling',\n        hover: (item: ItemTypeWhithIndex, monitor: any) => {\n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n            const clientOffset = monitor.getClientOffset();\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            dispatch({\n                type: MOVE_ITEM_IN_ORDER,\n                dragIndex,\n                hoverIndex\n            });\n            item.index = hoverIndex;\n        }\n    })\n\n    const [{ isDragging }, drag] = useDrag({\n        type: 'filling',\n        item: () => {\n            return { item, index }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging()\n        })\n    })\n    const opacity = isDragging ? 0 : 1;\n    drag(drop(ref));\n\n    return (\n        <div className='mr-2 order-item' ref={ref} style={{ opacity }}>\n            <DragIcon type=\"primary\" />\n            <ConstructorElement\n                text={item.name}\n                price={item.price}\n                thumbnail={item.image}\n                handleClose={() => { removeItem(item._id, index, item._key) }}\n            />\n        </div>\n    )\n}","import React from \"react\";\nimport style from './fillingContainer.module.css';\nimport FillingItem from \"./filling-item/fillingItem\";\nimport { ItemType } from \"../../../../utils/ts-types\";\nimport { useSelector } from \"../../../../services/hooks\";\n\n\n\nfunction FillingContainer() {\n    const { orderItems } = useSelector((store) =>\n        store.ingredient)\n\n    return (\n        <div className={style.orderContainer} >\n            {orderItems.map((item: ItemType, index: number) => (\n                <FillingItem key={item._key} item={item} index={index} />\n            ))}\n        </div>\n    )\n}\n\nexport default FillingContainer\n","import React, { useMemo } from \"react\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport orderListStyle from './orderList.module.css';\nimport { ConstructorElement } from '../../../index';\nimport FillingContainer from \"./filling-container/fillingContainer\";\nimport { useDrop } from \"react-dnd\";\nimport {\n    ADD_BUN_TO_ODER,\n    ADD_INGREDIENT_TO_ORDER\n} from \"../../../services/actions/item\";\nimport { ItemType } from \"../../../utils/ts-types\";\nimport { useDispatch, useSelector } from \"../../../services/hooks\";\n\n\ninterface ItemProps {\n    item: ItemType\n    index: number\n}\n\nfunction OrderList() {\n    const dispatch = useDispatch();\n\n    const { buns } = useSelector((store) =>\n        store.ingredient\n    )\n\n    function moveItem(item: ItemProps) {\n        const { _id } = item.item\n        if (item.item.type === 'bun') {\n            if (buns.length === 0 || buns.length === 1) {\n                dispatch({\n                    type: ADD_BUN_TO_ODER,\n                    ...{ _id }\n                });\n            }\n        } else {\n            dispatch({\n                type: ADD_INGREDIENT_TO_ORDER,\n                ...{ _id }\n            });\n        }\n    }\n    const [, dropTarget] = useDrop({\n        accept: 'ingredients',\n        drop(itemId: ItemProps) {\n            moveItem(itemId);\n        },\n        collect: monitor => ({\n            isHover: monitor.isOver()\n        })\n    });\n\n    const bunTop = useMemo(\n        () => {\n            return buns.map((item: ItemType) => (\n                <div key={uuid_v4()} className='ml-6 order-item bun' style={{ display: 'flex', width: \"100%\" }}>\n                    <ConstructorElement\n                        type=\"top\"\n                        isLocked={true}\n                        text={`${item.name} (верх)`}\n                        price={item.price}\n                        thumbnail={item.image}\n                    />\n                </div>\n            ))\n        }, [buns]\n    );\n    const bunBottom = useMemo(\n        () => {\n            return buns.map((item: ItemType) => (\n                <div key={uuid_v4()} className='ml-6 order-item bun' style={{ display: 'flex', width: \"100%\" }}>\n                    <ConstructorElement\n                        type=\"bottom\"\n                        isLocked={true}\n                        text={`${item.name} (низ)`}\n                        price={item.price}\n                        thumbnail={item.image}\n                    />\n                </div >\n            ));\n        }, [buns]\n    );\n\n    return (\n        <div ref={dropTarget} className={`${orderListStyle.list} mb-10`}>\n            {bunTop}\n            <FillingContainer />\n            {bunBottom}\n        </div>\n    )\n}\n\nexport default OrderList","import { ItemType } from \"./ts-types\";\n\nexport const totalPriceSelector = (state: { ingredient: { orderItems: ItemType[]; buns: ItemType[]; }; }) => {\n    const {\n        ingredient: { orderItems, buns }\n    } = state;\n    return orderItems.reduce((acc: number, item: { price: number; }) => acc + item.price, 0) +\n        2 * buns.reduce((acc: number, item: { price: number; }) => acc + item.price, 0);\n};\n","import React from \"react\";\nimport { CurrencyIcon, Button } from '../../../index';\nimport totalBlockStyle from './totalBlock.module.css';\nimport { totalPriceSelector } from \"../../../utils/selector\";\nimport { SHOW_MODAL } from \"../../../services/actions/item\";\nimport { postOrder } from '../../../services/actions/item';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"../../../services/hooks\";\n\nfunction TotalBlock() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { orderItems } = useSelector((store) =>\n        store.ingredient);\n    const { buns } = useSelector((store) =>\n        store.ingredient);\n\n    const totalPrice = useSelector(totalPriceSelector);\n    const hasRequestOrderFailed = useSelector((store) =>\n        store.order.hasRequestOrderFailed)\n\n    const { user } = useSelector((store) =>\n        store.register);\n\n    function postOrderCall() {\n        let order: any[] = [];\n        orderItems.forEach((item) => {\n            order.push(item._id);\n\n        })\n        buns.forEach((item) => {\n            order.push(item._id);\n\n        })\n        if (orderItems.length > 0 && buns.length > 0) {\n            if (user.email !== '' && user.name !== '') {\n                dispatch(postOrder(order));\n                if (!hasRequestOrderFailed) {\n                    openModal()\n                }\n            } else {\n                history.replace({ pathname: '/login' });\n            }\n\n        }\n    }\n\n    function openModal() {\n        dispatch({\n            type: SHOW_MODAL,\n            content: null,\n            currentItem: {}\n        })\n    }\n\n    return (\n        <div className={totalBlockStyle.container}>\n            <span className=\"text text_type_digits-medium mr-2\">{totalPrice}</span>\n            <CurrencyIcon type=\"primary\" />\n            <div className='ml-10'></div>\n            <Button type=\"primary\" size=\"medium\" onClick={postOrderCall}>\n                Оформить заказ\n            </Button>\n        </div>\n    )\n}\n\nexport default TotalBlock","import React from \"react\";\nimport burgerConstructorStyle from './burgerConstructor.module.css';\nimport OrderList from \"./order-list/orderList\";\nimport TotalBlock from \"./total-block/totalBlock\";\n\n\nfunction BurgerConstructor() {\n    return (\n        <section className={`${burgerConstructorStyle.section} pt-25 pl-4`} id='dropSection'>\n            <OrderList />\n            <TotalBlock />\n        </section>\n    )\n}\n\nexport default BurgerConstructor\n","import React from \"react\";\nimport modalIngredientStyle from './ingredientDetails.module.css';\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"../../services/hooks\";\n\nfunction IngredientDetails() {\n    let { id } = useParams<any>();\n    const { items } = useSelector((store) =>\n        store.ingredient)\n\n    const item = items.filter(item => item._id === id)[0]\n    if (!item) {\n        return null;\n    }\n\n    return (\n        <div className={modalIngredientStyle.content}>\n            <img src={item.image_large} className={`${modalIngredientStyle.modalImage} mb-4`} alt={item.name} />\n            <span className=\"text text_type_main-medium mb-8\">\n                {item.name}\n            </span>\n            <div className={modalIngredientStyle.spansContainer}>\n                <div className={`${modalIngredientStyle.spans} mr-5`}>\n                    <span className=\"text text_type_main-default text_color_inactive mb-2\">Калории,ккал</span>\n                    <span className=\"text text_type_digits-default text_color_inactive\">{item.calories}</span>\n                </div>\n                <div className={`${modalIngredientStyle.spans} mr-5`}>\n                    <span className=\"text text_type_main-default text_color_inactive mb-2\">Белки, г</span>\n                    <span className=\"text text_type_digits-default text_color_inactive\">{item.proteins}</span>\n                </div>\n                <div className={`${modalIngredientStyle.spans} mr-5`}>\n                    <span className=\"text text_type_main-default text_color_inactive mb-2\">Жиры, г</span>\n                    <span className=\"text text_type_digits-default text_color_inactive\">{item.fat}</span>\n                </div>\n                <div className={modalIngredientStyle.spans}>\n                    <span className=\"text text_type_main-default text_color_inactive mb-2\">Углеводы, г</span>\n                    <span className=\"text text_type_digits-default text_color_inactive\">{item.carbohydrates}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IngredientDetails\n","export default __webpack_public_path__ + \"static/media/done.e036971b.png\";","import React from \"react\";\nimport orderDetailsStyle from './orderDetails.module.css';\nimport image from '../../images/done.png';\nimport { useSelector } from \"../../services/hooks\";\n\nfunction OrderDetails() {\n    const number = useSelector((store) =>\n        store.order.orderNumber\n    )\n    return (\n        <div className={orderDetailsStyle.container}>\n            <div className={`${orderDetailsStyle.text} text text_type_digits-large mb-8`}>\n                {number}\n            </div>\n            <span className=\"text text_type_main-medium mb-15\">\n                идентификатор заказа\n            </span>\n            <img src={image} className={`${orderDetailsStyle.image} mb-15`} alt='check' />\n            <span className=\"text text_type_main-default mb-2\">\n                Ваш заказ начали готовить\n            </span>\n            <span className=\"text text_type_main-default text_color_inactive\">\n                Дождитесь готовности на орбитальной станции\n            </span>\n        </div>\n    )\n}\n\nexport default OrderDetails","import React from \"react\";\nimport overlayStyle from './modalOverlay.module.css';\n\ninterface ModalOverlayProps {\n    children: React.ReactNode\n    closeModal: ((...args: any[]) => any) | (() => void)\n}\n\nconst ModalOverlay = (props: ModalOverlayProps) => {\n    return (\n        <div className={overlayStyle.container} onClick={props.closeModal} id={'overlay'}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default ModalOverlay\n","import React, { useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport modalStyle from './modal.module.css';\nimport { CloseIcon } from '../../index';\nimport ModalOverlay from \"../modal-overlay/modalOverlay\";\n\nconst modalElement = document.getElementById('react-modals');\n\ninterface CloseStyle {\n    position: 'absolute' | 'static'\n    top: string\n    right: string\n}\n\ninterface ModalProps {\n    pStyle: string\n    header: string\n    closeModal: ((...args: any[]) => any) | (() => void)\n    closeStyle?: CloseStyle | undefined\n    children: React.ReactNode\n}\n\nfunction Modal(props: ModalProps) {\n\n    const { closeModal } = props;\n\n    function close(event: React.MouseEvent) {\n        if (event.target === document.getElementById('overlay')) {\n            closeModal();\n        }\n    }\n\n    const keyHandler = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            closeModal();\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyHandler);\n        return () => {\n            document.removeEventListener('keydown', keyHandler);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return ReactDOM.createPortal(\n        <ModalOverlay closeModal={close}>\n            <div className={`${modalStyle.content} ${props.pStyle}`} id='modal'>\n                <div className={modalStyle.header}>\n                    <p className=\"text text_type_main-large\">\n                        {props.header}\n                    </p>\n                    <div className={modalStyle.close} onClick={props.closeModal}\n                        style={props.closeStyle} id='modalClose'>\n                        <CloseIcon type=\"primary\" />\n                    </div>\n                </div>\n                {props.children}\n            </div>\n        </ModalOverlay>,\n        modalElement!\n    )\n}\n\nexport default Modal","import { AppDispatch, AppThunk } from '../../utils';\nimport { IUser } from '../../utils/ts-types';\nimport { URL } from '../../utils/url';\n\nexport const REG_USER_REQUEST: 'REG_USER_REQUEST' = 'REG_USER_REQUEST';\nexport const REG_USER_SUCCESS: 'REG_USER_SUCCESS' = 'REG_USER_SUCCESS';\nexport const REG_USER_FAILED: 'REG_USER_FAILED' = 'REG_USER_FAILED';\n\nexport const AUTH_USER_REQUEST: 'AUTH_USER_REQUEST' = 'AUTH_USER_REQUEST';\nexport const AUTH_USER_SUCCESS: 'AUTH_USER_SUCCESS' = 'AUTH_USER_SUCCESS';\nexport const AUTH_USER_FAILED: 'AUTH_USER_FAILED' = 'AUTH_USER_FAILED';\n\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\n\nexport const LOGOUT_USER_REQUEST: 'LOGOUT_USER_REQUEST' = 'LOGOUT_USER_REQUEST';\nexport const LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS' = 'LOGOUT_USER_SUCCESS';\nexport const LOGOUT_USER_FAILED: 'LOGOUT_USER_FAILED' = 'LOGOUT_USER_FAILED';\n\nexport const FOGOT_PASS_REQUEST: 'FOGOT_PASS_REQUEST' = 'FOGOT_PASS_REQUEST';\nexport const FOGOT_PASS_SUCCESS: 'FOGOT_PASS_SUCCESS' = 'FOGOT_PASS_SUCCESS';\nexport const FOGOT_PASS_FAILED: 'FOGOT_PASS_FAILED' = 'FOGOT_PASS_FAILED';\n\nexport const RESET_PASS_REQUEST: 'RESET_PASS_REQUEST' = 'RESET_PASS_REQUEST';\nexport const RESET_PASS_SUCCESS: 'RESET_PASS_SUCCESS' = 'RESET_PASS_SUCCESS';\nexport const RESET_PASS_FAILED: 'RESET_PASS_FAILED' = 'RESET_PASS_FAILED';\n\nexport const CHANGE_USER_REQUEST: 'CHANGE_USER_REQUEST' = 'CHANGE_USER_REQUEST';\nexport const CHANGE_USER_SUCCESS: 'CHANGE_USER_SUCCESS' = 'CHANGE_USER_SUCCESS';\nexport const CHANGE_USER_FAILED: 'CHANGE_USER_FAILED' = 'CHANGE_USER_FAILED';\n\n\nexport interface IRegUserRequestAction {\n    readonly type: typeof REG_USER_REQUEST;\n}\n\nexport interface IRegUserSuccsessAction {\n    readonly type: typeof REG_USER_SUCCESS;\n    readonly user: IUser;\n}\n\nexport interface IRegUserFailedAction {\n    readonly type: typeof REG_USER_FAILED;\n}\n\nexport interface IAuthUserRequestAction {\n    readonly type: typeof AUTH_USER_REQUEST;\n}\n\nexport interface IAuthUserSuccsessAction {\n    readonly type: typeof AUTH_USER_SUCCESS;\n    readonly user: IUser;\n}\n\nexport interface IAuthUserFailedAction {\n    readonly type: typeof AUTH_USER_FAILED;\n}\n\nexport interface IGetUserRequestAction {\n    readonly type: typeof GET_USER_REQUEST;\n}\n\nexport interface IGetUserSuccsessAction {\n    readonly type: typeof GET_USER_SUCCESS;\n    readonly user: IUser;\n}\n\nexport interface IGetUserFailedAction {\n    readonly type: typeof GET_USER_FAILED;\n}\n\nexport interface ILogoutUserRequestAction {\n    readonly type: typeof LOGOUT_USER_REQUEST;\n}\n\nexport interface ILogoutUserSuccsessAction {\n    readonly type: typeof LOGOUT_USER_SUCCESS;\n}\n\nexport interface ILogoutUserFailedAction {\n    readonly type: typeof LOGOUT_USER_FAILED;\n}\n\nexport interface IFogotPassRequestAction {\n    readonly type: typeof FOGOT_PASS_REQUEST;\n}\n\nexport interface IFogotPassSuccsessAction {\n    readonly type: typeof FOGOT_PASS_SUCCESS;\n}\n\nexport interface IFogotPassFailedAction {\n    readonly type: typeof FOGOT_PASS_FAILED;\n}\n\nexport interface IResetPassRequestAction {\n    readonly type: typeof RESET_PASS_REQUEST;\n}\n\nexport interface IResetPassSuccsessAction {\n    readonly type: typeof RESET_PASS_SUCCESS;\n}\n\nexport interface IResetPassFailedAction {\n    readonly type: typeof RESET_PASS_FAILED;\n}\n\nexport interface IChangeUserRequestAction {\n    readonly type: typeof CHANGE_USER_REQUEST;\n}\n\nexport interface IChangeUserSuccsessAction {\n    readonly type: typeof CHANGE_USER_SUCCESS;\n    readonly user: IUser;\n}\n\nexport interface IChangeUserFailedAction {\n    readonly type: typeof CHANGE_USER_FAILED;\n}\n\nexport type TAuthActions =\n    IRegUserRequestAction |\n    IRegUserSuccsessAction |\n    IRegUserFailedAction |\n    IAuthUserRequestAction |\n    IAuthUserSuccsessAction |\n    IAuthUserFailedAction |\n    IGetUserRequestAction |\n    IGetUserSuccsessAction |\n    IGetUserFailedAction |\n    ILogoutUserRequestAction |\n    ILogoutUserSuccsessAction |\n    ILogoutUserFailedAction |\n    IFogotPassRequestAction |\n    IFogotPassSuccsessAction |\n    IFogotPassFailedAction |\n    IResetPassRequestAction |\n    IResetPassSuccsessAction |\n    IResetPassFailedAction |\n    IResetPassRequestAction |\n    IResetPassSuccsessAction |\n    IResetPassFailedAction |\n    IChangeUserRequestAction |\n    IChangeUserSuccsessAction |\n    IChangeUserFailedAction;\n\nexport const regUser: AppThunk = (email: string, pass: string, name: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: REG_USER_REQUEST\n        })\n        fetch(`${URL}/auth/register`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                \"email\": email,\n                \"password\": pass,\n                \"name\": name\n            })\n        }).then(async res => {\n            if (res && res.ok) {\n                const parsed = await res.json();\n                dispatch({\n                    type: REG_USER_SUCCESS,\n                    user: parsed.user\n                })\n                localStorage.setItem('accessToken', parsed.accessToken);\n                localStorage.setItem('refreshToken', parsed.refreshToken);\n            } else {\n                dispatch({\n                    type: REG_USER_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: REG_USER_FAILED\n            })\n        })\n    }\n}\n\nexport const authUser: AppThunk = (email: string, pass: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: AUTH_USER_REQUEST\n        })\n        fetch(`${URL}/auth/login`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                \"email\": email,\n                \"password\": pass\n            })\n        }).then(async res => {\n            if (res && res.ok) {\n                const parsed = await res.json();\n                dispatch({\n                    type: AUTH_USER_SUCCESS,\n                    user: parsed.user\n                })\n                localStorage.setItem('accessToken', parsed.accessToken);\n                localStorage.setItem('refreshToken', parsed.refreshToken);\n            } else {\n                dispatch({\n                    type: AUTH_USER_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: AUTH_USER_FAILED\n            })\n        })\n    }\n}\n\n//Можно написать функцию обертку retriableFetch вокруг fetch\n// Функция retriableFetch принимает те же параметры, что и fetch: url и options и выполняет запрос.\n// Если запрос падает с ошибкой, то выполняется запрос обновления токена, новые токены сохраняются,\n//  в options обновляется значение токена в заголовке.retriableFetch используется в запросах получения и \n//  обновления данных пользователя.\n\nconst checkReponse = (res: Response) => {\n    return res.ok ? res.json() : res.json().then((err: any) => Promise.reject(err));\n};\n\nexport const refreshToken = async () => {\n    const res = await fetch(`${URL}/auth/token`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken'),\n        }),\n    });\n    return checkReponse(res);\n};\n\nexport const retriableFetch = async (url: string, options = {}) => {\n    try {\n        const res = await fetch(url, options);\n        const result = await checkReponse(res);\n        return result; // или можно сделать return await; главное дождаться промиса, чтоб catch сработал при ошибке\n    } catch (err: any) {\n        // сначала убеждаемся, что это не любая ошибка, а нужно токен обновить\n        if (err.message === \"jwt expired\") {\n            const refreshData = await refreshToken(); // обновляем токен; пытаемся 1 раз, если не сложилось -- падаем с ошибкой\n            localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\n            localStorage.setItem(\"accessToken\", refreshData.accessToken);\n            // if (options.headers) {\n            //     options.headers = {}\n            // }\n            // // если в переданных опциях не было хедеров, добавляем в options пустой объект по ключу headers\n            // options.headers.authorization = `Bearer ${refreshData.accessToken}`;\n            const res = await fetch(url, options); // повторяем оригинальный запрос с оригинальными options (+ дополнительным хедером)\n            return await checkReponse(res); // если все равно проваливаемся -- значит не судьба :/\n        } else {\n            throw err;\n        }\n    }\n};\n\nexport const getUser: AppThunk = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_USER_REQUEST\n        })\n        retriableFetch(`${URL}/auth/user`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                // Отправляем токен и схему авторизации в заголовке при запросе данных\n                Authorization: `${localStorage.getItem('accessToken')}`\n            },\n        }).then(result => {\n            dispatch({\n                type: GET_USER_SUCCESS,\n                user: result.user\n            })\n        }).catch(err => {\n            dispatch({\n                type: GET_USER_FAILED\n            })\n        })\n    }\n}\n\nexport const logout: AppThunk = (func: { (): void; (): void; }) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: LOGOUT_USER_REQUEST\n        })\n        fetch(`${URL}/auth/logout`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                token: localStorage.getItem('refreshToken')\n            })\n        }).then(async res => {\n            localStorage.removeItem('refreshToken');\n            localStorage.removeItem('accessToken');\n            if (res && res.ok) {\n                dispatch({\n                    type: LOGOUT_USER_SUCCESS,\n                })\n                func();\n            } else {\n                dispatch({\n                    type: LOGOUT_USER_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: LOGOUT_USER_FAILED\n            })\n        })\n    }\n}\n\nexport const fogotPass: AppThunk = (email: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: FOGOT_PASS_REQUEST\n        })\n        fetch(`${URL}/password-reset`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: email\n            })\n        }).then(async res => {\n            if (res && res.status === 200) {\n                dispatch({\n                    type: FOGOT_PASS_SUCCESS,\n                })\n            } else {\n                dispatch({\n                    type: FOGOT_PASS_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: FOGOT_PASS_FAILED\n            })\n        })\n    }\n}\n\nexport const resetPass: AppThunk = (pass: string, code: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: RESET_PASS_REQUEST\n        })\n        fetch(`${URL}/password-reset/reset`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                password: pass,\n                token: code\n            })\n        }).then(async res => {\n            if (res && res.ok) {\n                dispatch({\n                    type: RESET_PASS_SUCCESS,\n                })\n            } else {\n                dispatch({\n                    type: RESET_PASS_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: RESET_PASS_FAILED\n            })\n        })\n    }\n}\n\nexport const changeUserData: AppThunk = (name: string, email: string, pass: string | undefined) => {\n    return function (dispatch: AppDispatch) {\n        let obj = {};\n        if (pass === undefined) {\n            obj = {\n                name: name,\n                email: email,\n            }\n        } else {\n            obj = {\n                name: name,\n                email: email,\n                password: pass\n            }\n        }\n        dispatch({\n            type: CHANGE_USER_REQUEST\n        })\n        fetch(`${URL}/auth/user`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `${localStorage.getItem('accessToken')}`\n            },\n            body: JSON.stringify(obj)\n        }).then(async res => {\n            if (res && res.ok) {\n                const parsed = await res.json();\n                dispatch({\n                    type: CHANGE_USER_SUCCESS,\n                    user: parsed.user\n                })\n            } else {\n                dispatch({\n                    type: CHANGE_USER_FAILED\n                })\n            }\n        }).catch(err => {\n            dispatch({\n                type: CHANGE_USER_FAILED\n            })\n        })\n    }\n}","import React from \"react\";\nimport style from './login.module.css';\nimport { Input, PasswordInput, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useHistory } from 'react-router-dom';\nimport { useCallback } from \"react\";\nimport { authUser } from \"../../services/actions/auth\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\n\nexport default function LoginPage() {\n    const historyState = useLocation<any>().state;\n    const dispatch = useDispatch();\n    const [state, setState] = React.useState({\n        email: '',\n        password: ''\n    });\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        const name = e.target.name\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n    const history = useHistory();\n    const onRegisterClick = useCallback(\n        () => {\n            history.replace({ pathname: '/register' });\n        },\n        [history]\n    );\n\n    const onResetPassClick = useCallback(\n        () => {\n            history.replace({ pathname: '/fogot-password' });\n        },\n        [history]\n    );\n\n    const { hasReqAuthSuccess, hasReqAuthFailed } = useSelector((store) =>\n        store.register);\n\n    const login = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(authUser(state.email, state.password))\n        if (hasReqAuthSuccess) {\n            history.replace({ pathname: '/' });\n        }\n    }\n\n    const { user } = useSelector((store) =>\n        store.register)\n\n    if (user.email !== '' && user.name !== '') {\n        return (\n            <Redirect\n                to={historyState?.from || '/'}\n            />\n        );\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.content}>\n                <h3 className='text text_type_main-medium m-6'>Вход</h3>\n                <form className={style.form} onSubmit={login}>\n                    <Input\n                        type={'email'}\n                        placeholder={'E-mail'}\n                        onChange={onChange}\n                        name={'email'}\n                        value={state.email}\n                        error={false}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                    <div className='mb-6'></div>\n                    <PasswordInput onChange={onChange} value={state.password} name={'password'} />\n                    <div className='mb-6'></div>\n                    {hasReqAuthFailed &&\n                        <>\n                            <span className=\"text text_type_main-default text_color_inactive\">\n                                Проверьте правильность введенного логина или пароля\n                            </span>\n                            <div className='mb-6'></div>\n                        </>\n                    }\n                    <Button type=\"primary\" size=\"small\">\n                        Войти\n                    </Button>\n                    <div className='mb-20'></div>\n                </form>\n                <div className={style.buttons}>\n                    <span className='text text_type_main-default text_color_inactive'>Вы — новый пользователь?</span>\n                    <Button type=\"secondary\" size=\"medium\" onClick={onRegisterClick}>\n                        Зарегистрироваться\n                    </Button>\n                </div>\n                <div className={style.buttons}>\n                    <span className='text text_type_main-default text_color_inactive'>Забыли пароль?</span>\n                    <Button type=\"secondary\" size=\"medium\" onClick={onResetPassClick}>\n                        Восстановить пароль\n                    </Button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useRef } from \"react\";\nimport style from './register.module.css';\nimport { Input, PasswordInput, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useHistory } from 'react-router-dom';\nimport { useCallback } from \"react\";\nimport { regUser } from \"../../services/actions/auth\";\nimport { Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport default function RegisterPage() {\n    const [state, setState] = React.useState({\n        name: '',\n        email: '',\n        password: ''\n    });\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        const name = e.target.name\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const nameRef = useRef(null);\n    const emailRef = useRef(null);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onLoginClick = useCallback(\n        () => {\n            history.replace({ pathname: '/login' });\n        },\n        [history]\n    );\n\n    const { hasReqRegFailed, hasReqRegSuccess } = useSelector((store) =>\n        store.register);\n\n    const register = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(regUser(state.email, state.password, state.name))\n        if (hasReqRegSuccess) {\n            history.replace({ pathname: '/login' });\n        }\n    }\n\n    const { user } = useSelector((store) =>\n        store.register)\n\n    if (user.email !== '' && user.name !== '') {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/'\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.content}>\n                <h3 className='text text_type_main-medium m-6'>Регистрация</h3>\n                <form className={style.form} onSubmit={register}>\n                    <Input\n                        type={'text'}\n                        placeholder={'Имя'}\n                        onChange={onChange}\n                        name={'name'}\n                        value={state.name}\n                        error={false}\n                        ref={nameRef}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                    <div className='mb-6'></div>\n                    <Input\n                        type={'email'}\n                        placeholder={'E-mail'}\n                        onChange={onChange}\n                        name={'email'}\n                        value={state.email}\n                        error={false}\n                        ref={emailRef}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                    <div className='mb-6'></div>\n                    <PasswordInput onChange={onChange} value={state.password} name={'password'} />\n                    <div className='mb-6'></div>\n                    {hasReqRegFailed &&\n                        <>\n                            <span className=\"text text_type_main-default text_color_inactive\">\n                                Не удалось зарегестрироваться. Не повезло. Не фортануло\n                            </span>\n                            <div className='mb-6'></div>\n                        </>\n                    }\n                    <Button type=\"primary\" size=\"small\">\n                        Зарегистрироваться\n                    </Button>\n                    <div className='mb-20'></div>\n                </form>\n                <div className={style.buttons}>\n                    <span className='text text_type_main-default text_color_inactive'>Уже зарегистрированы?</span>\n                    <Button type=\"secondary\" size=\"medium\" onClick={onLoginClick}>\n                        Войти\n                    </Button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport style from './fogotPassword.module.css';\nimport { Input, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useHistory } from 'react-router-dom';\nimport { useCallback } from \"react\";\nimport { fogotPass } from \"../../services/actions/auth\";\nimport { Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport default function FogotPassPage() {\n    const [value, setValue] = React.useState('');\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const { hasFogotPassReqSuccess, hasFogotPassReqFailed } = useSelector((store) =>\n        store.register)\n\n    const onLoginClick = useCallback(\n        () => {\n            history.replace({ pathname: '/login' });\n        },\n        [history]\n    );\n\n    const restoreClick = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (value !== '') {\n            dispatch(fogotPass(value));\n            history.replace({ pathname: '/reset-password' });\n        }\n    }\n\n    const { user } = useSelector((store) =>\n        store.register)\n\n    if (user.email !== '' && user.name !== '') {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/'\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.content}>\n                <h3 className='text text_type_main-medium m-6'>Восстановление пароля</h3>\n                <form className={style.form} onSubmit={restoreClick}>\n                    <Input\n                        type={'email'}\n                        placeholder={'Укажите E-mail'}\n                        onChange={e => setValue(e.target.value)}\n                        name={'email'}\n                        value={value}\n                        error={false}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                    <div className='mb-6'></div>\n                    {hasFogotPassReqFailed &&\n                        <>\n                            <span className=\"text text_type_main-default text_color_inactive mb-6\">\n                                Что-то не так, проверьте email, а лучше поспите\n                            </span>\n                            <div className='mb-6'></div>\n                        </>\n                    }\n                    <Button type=\"primary\" size=\"small\">\n                        Восстановить\n                    </Button>\n                    <div className='mb-20'></div>\n                </form>\n                <div className={style.buttons}>\n                    <span className='text text_type_main-default text_color_inactive'>Вспомнили пароль?</span>\n                    <Button type=\"secondary\" size=\"medium\" onClick={onLoginClick}>\n                        Войти\n                    </Button>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport style from './resetPassword.module.css';\nimport { Input, PasswordInput, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useHistory } from 'react-router-dom';\nimport { useCallback } from \"react\";\nimport { resetPass } from \"../../services/actions/auth\";\nimport { Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport default function ResetPasswordPage() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { hasResetPassReqSuccess, hasResetPassReqFailed } = useSelector((store) =>\n        store.register)\n\n    const [state, setState] = React.useState({\n        password: '',\n        token: ''\n    });\n    const onLoginClick = useCallback(\n        () => {\n            history.replace({ pathname: '/login' });\n        },\n        [history]\n    );\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        const name = e.target.name\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const resetClick = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (state.password !== '' && state.token !== '') {\n            dispatch(\n                resetPass(state.password, state.token)\n            )\n            if (hasResetPassReqSuccess) {\n                history.replace({ pathname: '/login' });\n            }\n        }\n    }\n\n    const { user, hasFogotPassReqSuccess } = useSelector((store) =>\n        store.register)\n\n    if (user.email !== '' && user.name !== '') {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/'\n                }}\n            />\n        );\n    }\n\n    if (history.action !== 'REPLACE') {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/fogot-password'\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.content}>\n                <h3 className='text text_type_main-medium m-6'>Восстановление пароля</h3>\n                <form className={style.form} onSubmit={resetClick}>\n                    <PasswordInput onChange={onChange} value={state.password}\n                        name={'password'} />\n                    <div className='mb-6'></div>\n                    <Input\n                        type={'text'}\n                        placeholder={'Введите код из письма'}\n                        onChange={onChange}\n                        name={'token'}\n                        value={state.token}\n                        error={false}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                    <div className='mb-6'></div>\n                    {hasResetPassReqFailed &&\n                        <>\n                            <span className=\"text text_type_main-default text_color_inactive mb-6\">\n                                Что-то не так, проверьте email, а лучше поспите\n                            </span>\n                            <div className='mb-6'></div>\n                        </>\n                    }\n                    <Button type=\"primary\" size=\"small\">\n                        Сохранить\n                    </Button>\n                    <div className='mb-20'></div>\n                </form>\n                <div className={style.buttons}>\n                    <span className='text text_type_main-default text_color_inactive'>Вспомнили пароль?</span>\n                    <Button type=\"secondary\" size=\"medium\" onClick={onLoginClick}>\n                        Войти\n                    </Button>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React, { useRef, useState } from 'react';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst validateEmail = (email: string) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n};\n\nexport const EmailInputCustom = ({\n    value,\n    onChange,\n    name,\n    type,\n    placeholder,\n    size = 'default'\n\n}: {\n    value: string;\n    name: string;\n    type: 'text' | 'email' | 'password';\n    placeholder: string;\n    size?: 'default' | 'small';\n    onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n}) => {\n    const [fieldDisabled, setDisabled] = useState(true);\n\n    const [error, setError] = useState(false);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onIconClick = () => {\n        setDisabled(false);\n        setTimeout(() => inputRef.current?.focus(), 0);\n    };\n\n    const validateField = (value: string) => {\n        setError(!validateEmail(value));\n    };\n\n    const onFocus = () => {\n        setError(false);\n    };\n\n    const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n        if (e.target.value) {\n            validateField(e.target.value);\n        } else {\n            setError(false);\n        }\n        setDisabled(true);\n    };\n    return (\n        <Input\n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            icon={'EditIcon'}\n            value={value}\n            ref={inputRef}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            name={name}\n            error={error}\n            disabled={fieldDisabled}\n            onIconClick={onIconClick}\n            errorText={'Email введен некорректно'}\n            size={size}\n        />\n    );\n};","import React, { useRef, useState } from 'react';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst validateEmail = (str: string) => {\n    const re = /^(?!\\s*$).+/;\n    return re.test(str);\n};\n\nexport const InputCustom = ({\n    value,\n    onChange,\n    name,\n    type,\n    placeholder,\n    size = 'default'\n\n}: {\n    value: string;\n    name: string;\n    type: 'text' | 'email' | 'password';\n    placeholder: string;\n    size?: 'default' | 'small';\n    onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n}) => {\n    const [fieldDisabled, setDisabled] = useState(true);\n\n    const [error, setError] = useState(false);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onIconClick = () => {\n        setDisabled(false);\n        setTimeout(() => inputRef.current?.focus(), 0);\n    };\n\n    const validateField = (value: string) => {\n        setError(!validateEmail(value));\n    };\n\n    const onFocus = () => {\n        setError(false);\n    };\n\n    const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n        if (e.target.value) {\n            validateField(e.target.value);\n        } else {\n            setError(false);\n        }\n        setDisabled(true);\n    };\n    return (\n        <Input\n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            icon={'EditIcon'}\n            value={value}\n            ref={inputRef}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            name={name}\n            error={error}\n            disabled={fieldDisabled}\n            onIconClick={onIconClick}\n            errorText={'Поле должно быть заполнено!'}\n            size={size}\n        />\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport { EmailInputCustom } from \"../custom-input-email\";\nimport { InputCustom } from \"../custom-input\";\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport style from './profileForm.module.css';\nimport { changeUserData } from \"../../../services/actions/auth\";\nimport { useDispatch, useSelector } from \"../../../services/hooks\";\n\nexport default function ProfileForm() {\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((store) =>\n        store.register);\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [pass, setPass] = useState('');\n    const [isChanged, setIsChanged] = useState(false);\n\n    useEffect(() => {\n        if (email === user.email && name === user.name &&\n            pass === '') {\n            setIsChanged(false)\n        } else {\n            setIsChanged(true)\n        }\n    }, [email, name, pass, user]);\n\n    const cancelClick = () => {\n        setIsChanged(false);\n        setEmail(user.email);\n        setName(user.name);\n        setPass('');\n    }\n\n    const { hasChangeUserReqFailed,\n        hasChangeUserReqSuccess } = useSelector((store) =>\n            store.register);\n\n    const saveClick = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const dataPass = pass === '' ? undefined : pass\n        dispatch(\n            changeUserData(name, email, dataPass)\n        )\n        setPass('');\n    }\n\n    return (\n        <>\n            {(user.email !== '' && user.name !== '') ?\n                (<form className={style.form} onSubmit={saveClick}>\n                    <InputCustom onChange={e => { setName(e.target.value); setIsChanged(true) }}\n                        value={name} name={'name'} placeholder={'Имя'} type={'text'} />\n                    <div className='mb-6'></div>\n                    <EmailInputCustom onChange={e => { setEmail(e.target.value); setIsChanged(true) }}\n                        value={email} name={'email'} placeholder={'Логин'} type={'email'} />\n                    <div className='mb-6'></div>\n                    <InputCustom onChange={e => { setPass(e.target.value); setIsChanged(true) }}\n                        value={pass} name={'pass'} placeholder={'Пароль'} type={'password'} />\n                    {hasChangeUserReqSuccess &&\n                        <span className='text text_type_main-default text_color_inactive'>\n                            Данные пользователя успешно изменены\n                        </span>\n                    }\n                    {hasChangeUserReqFailed &&\n                        <span className='text text_type_main-default text_color_inactive'>\n                            Не удалось изменить данные. Попробуйте позже\n                        </span>\n                    }\n                    {isChanged &&\n                        <div className={`mt-6 ${style.buttonContainer}`}>\n                            <Button type=\"primary\" size=\"small\" onClick={cancelClick}>\n                                Отменить\n                            </Button>\n                            <Button type=\"primary\" size=\"small\"> Сохранить</Button>\n                        </div>\n                    }\n\n                </form>) :\n                (<span className='text text_type_main-default text_color_inactive'>\n                    Невозможно получить данные пользователя. Разлогинтесь и залогинтесь\n                </span>)\n\n            }\n        </>\n    )\n}","import React from \"react\";\nimport { ItemType } from \"../../../utils/ts-types\";\nimport style from './imgStackRow.module.css';\n\nexport default function ImgStackRow({ bun, orderItems }: { bun: (ItemType | undefined)[], orderItems: (ItemType | undefined)[] }) {\n    const bunElement = bun![0];\n    const itemsElement = orderItems!.slice(0, 3);\n\n    const lastElement = orderItems![4] ? orderItems![4] : null;\n    const count = orderItems!.slice(5, orderItems!.length).length;\n    return (\n        <div className={style.parentContainer}>\n            {bunElement && (\n                <div className={style.imageContainer}\n                    style={{\n                        transform: `translate(0px, 0px)`,\n                        zIndex: 99\n                    }}>\n                    <div\n                        key={bunElement._id}\n                        className={style.image}\n                        style={{\n                            backgroundImage: `url(${bunElement.image})`,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center center\",\n                        }}\n                    />\n                </div>\n            )}\n            {itemsElement.map((element, index) => {\n                return (\n                    <div className={style.imageContainer}\n                        key={index}\n                        style={{\n                            transform: `translate(${-(index + 1) * 15}px, 0px)`,\n                            zIndex: 99 - (index + 1)\n                        }}>\n                        <div\n                            key={`${element?._key}`}\n                            className={style.image}\n                            style={{\n                                backgroundImage: `url(${element?.image})`,\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center center\",\n                            }}\n                        />\n                    </div>\n                );\n            })}\n            {lastElement && count !== 0 && (\n                <div\n                    className={style.image_last}\n                    style={{\n                        backgroundImage: `url(${lastElement.image})`,\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center center\",\n                    }}\n                >\n                    <div className={style.background}>\n                        <span className={`${style.span} text text_type_digits-default`}>{`+${count}`}</span>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport style from './ordersStackItem.module.css';\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { IOrders, ItemType } from '../../../utils/ts-types';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"../../../services/hooks\";\nimport ImgStackRow from \"../img-stack-row/imgStackRow\";\n\n\n\ninterface OrderStackItemProps {\n    item: IOrders\n}\n\nexport default function OrderStackItem({ item }: OrderStackItemProps) {\n    const history = useHistory();\n    let currentPath = '';\n\n    if (window.location.pathname.includes('feed')) {\n        currentPath = '/feed';\n    } else {\n        currentPath = '/profile/orders';\n    }\n\n    function openModal() {\n        history.push({\n            state: { background: { pathname: currentPath } },\n            pathname: `${currentPath}/${item._id}`,\n        });\n    }\n\n    const diffDate = new Date().getDate() - Number(item.createdAt.split('T')[0].slice(8));\n    const time = item.createdAt.split('T')[1].slice(0, 5);\n\n    let currentDate = null;\n    if (diffDate < 0) {\n        currentDate = `Давно`\n    }\n    if (diffDate === 0) {\n        currentDate = 'Сегодня'\n    }\n    if (diffDate === 1) {\n        currentDate = 'Вчера'\n    }\n    if (diffDate > 1) {\n        currentDate = `${diffDate} дня назад`\n    }\n    const { items } = useSelector((store) =>\n        store.ingredient);\n\n    let orderItems: (ItemType | undefined)[] = [];\n    let buns: (ItemType | undefined)[] = [];\n\n    item.ingredients.forEach((el) => {\n        items.forEach((element) => {\n            if (element._id === el && element.type !== 'bun') {\n                orderItems.push(element)\n            }\n            if (element._id === el && element.type === 'bun') {\n                buns.push(element)\n            }\n        })\n    })\n\n    const totalPrice = orderItems.reduce((acc, item) => acc + item!.price, 0) +\n        2 * buns.reduce((acc, item) => acc + item!.price, 0);\n\n    return (\n        <div className={`${style.container} mb-6 mr-2 p-6`} onClick={openModal}>\n            <div className={style.top}>\n                <span className=\"text text_type_digits-default\">{`#${item.number}`}</span>\n                <span className=\"text text_type_main-small text_color_inactive\">\n                    {`${currentDate}, ${time} i-GMT+3`}\n                </span>\n            </div>\n            <p className=\"text text_type_main-medium mb-2\">\n                {item.name}\n            </p>\n            <p className=\"text text_type_main-small\">\n                {item.status === 'done' ? 'Выполнен' : item.status === 'pending' ? ' Готовится' : 'Создан'}\n            </p>\n            <div className={style.bottom}>\n                <ImgStackRow\n                    bun={buns}\n                    orderItems={orderItems} />\n                <div className={style.totalContainer}>\n                    <div className=\"text text_type_digits-default mr-2\">{totalPrice}</div>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n    )\n}","import { IPlayload } from \"../../utils/ts-types\";\n\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_START_ALL: 'WS_CONNECTION_START_ALL' = 'WS_CONNECTION_START_ALL';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\n\nexport interface IWsConnectionStartdAction {\n    readonly type: typeof WS_CONNECTION_START;\n}\n\nexport interface IWsConnectionStartAllAction {\n    readonly type: typeof WS_CONNECTION_START_ALL;\n}\n\nexport interface IWsConnectionSuccessAction {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionErrorAction {\n    payload: Event | undefined;\n    readonly type: typeof WS_CONNECTION_ERROR;\n}\n\nexport interface IWsConnectionClosedAction {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsGetMessageAction {\n    readonly payload: IPlayload;\n    readonly type: typeof WS_GET_MESSAGE;\n}\n\nexport type TWsActions =\n    IWsConnectionStartdAction |\n    IWsConnectionStartAllAction |\n    IWsConnectionSuccessAction |\n    IWsConnectionErrorAction |\n    IWsConnectionClosedAction |\n    IWsGetMessageAction;","import React, { useEffect } from \"react\";\nimport OrderStackItem from \"../../../components/orders-stack/orsers-stack-item/ordersStackItem\";\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from \"../../../services/actions/wsActionTypes\";\nimport { useDispatch, useSelector } from \"../../../services/hooks\";\nimport style from './profileOrders.module.css'\n\nexport default function ProfileOrdersPage() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: WS_CONNECTION_START });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        }\n    }, [dispatch]);\n\n    const ordersFull = useSelector((store) =>\n        store.ws.messages\n    )\n\n    return (\n        <div className={style.list}>\n            {ordersFull.map((item) =>\n                <OrderStackItem key={item._id} item={item} />\n            )}\n        </div>\n    )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { useSelector } from '../services/hooks';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode\n  exact?: boolean | undefined\n  path: string | undefined\n}\n\nexport function ProtectedRoute({ children, ...rest }: ProtectedRouteProps) {\n\n  const { user } = useSelector((store) =>\n    store.register);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user.email !== '' && user.name !== '' ? (\n          children\n        ) : (\n          // Если пользователя нет в хранилище, происходит переадресация на роут /login\n          <Redirect\n            to={{\n              // Маршрут, на который произойдёт переадресация\n              pathname: '/login',\n              // В from сохраним текущий маршрут\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport style from './stackItem.module.css';\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\ninterface IStackItem {\n    name: string,\n    type: string,\n    price: number,\n    image: string\n}\n\nexport default function StackItem({ name, type, price, image }: IStackItem) {\n    return (\n        <div className={style.container}>\n            <div className={style.nameCont}>\n                <img src={image} className={style.image} alt={name} />\n                <p className=\"text text_type_main-default mr-4\">\n                    {name}\n                </p>\n            </div>\n            <div className={style.total}>\n                <span className=\"text text_type_digits-default mr-4\">\n                    {type === 'bun' ? `2 x ${price}` : `1 x ${price}`}\n                </span>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n        </div>\n    )\n}","import React, { useEffect } from \"react\";\nimport style from './stackDetails.module.css';\nimport StackItem from \"./stack-item/stackItem\";\nimport { ItemType } from \"../../utils/ts-types\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useParams } from \"react-router-dom\";\nimport { WS_CONNECTION_START_ALL, WS_CONNECTION_CLOSED, WS_CONNECTION_START } from \"../../services/actions/wsActionTypes\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport default function StackDetails() {\n    let { id } = useParams<any>();\n    const dispatch = useDispatch();\n    const pathname = window.location.pathname;\n\n    let type = '';\n\n    if (pathname.includes('profile')) {\n        type = WS_CONNECTION_START;\n    } else {\n        type = WS_CONNECTION_START_ALL;\n    }\n\n    useEffect(() => {\n        dispatch({ type: type });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        }\n    }, [dispatch]);\n\n    const orders = useSelector((store) =>\n        store.ws.messages);\n    const { items } = useSelector((store) =>\n        store.ingredient);\n    const item = orders.filter(item => item._id === id)[0]\n\n    if (!item) {\n        return null;\n    }\n\n    const ingredientsArr: ItemType[] = [];\n\n    items.forEach((elemItems) => {\n        item.ingredients.forEach((elemItem) => {\n            if (elemItems._id === elemItem) {\n                ingredientsArr.push(elemItems)\n            }\n        })\n    })\n\n    let orderItems: (ItemType | undefined)[] = [];\n    let buns: (ItemType | undefined)[] = [];\n\n    ingredientsArr.forEach((element) => {\n        if (element.type !== 'bun') {\n            orderItems.push(element)\n        }\n        if (element.type === 'bun') {\n            buns.push(element)\n        }\n    })\n\n    const totalPrice = orderItems.reduce((acc, item) => acc + item!.price, 0) +\n        2 * buns.reduce((acc, item) => acc + item!.price, 0);\n\n    const diffDate = new Date().getDate() - Number(item.createdAt.split('T')[0].slice(8));\n    const time = item.createdAt.split('T')[1].slice(0, 5);\n    let currentDate = null;\n    if (diffDate < 0) {\n        currentDate = 'Давно';\n    }\n    if (diffDate === 0) {\n        currentDate = 'Сегодня';\n    }\n    if (diffDate === 1) {\n        currentDate = 'Вчера';\n    }\n    if (diffDate > 1) {\n        currentDate = `${diffDate} дня назад`;\n    }\n\n    return (\n        <div className={style.container}>\n            <p className=\"text text_type_digits-default mb-10\">\n                {`#${item.number}`}\n            </p>\n            <h4 className=\"text text_type_main-medium mb-3\">\n                {item.name}\n            </h4>\n            <p className={`${style.colorText} text text_type_main-small mb-15`}>\n                {item.status === 'done' ? 'Выполнен' : item.status === 'pending' ? ' Готовится' : 'Создан'}\n            </p>\n            <p className=\"text text_type_main-medium mb-6\">\n                Состав:\n            </p>\n            <div className={`${style.stack} mb-10`}>\n                {ingredientsArr.map((item, index) =>\n                    <StackItem\n                        key={index}\n                        name={item.name}\n                        price={item.price}\n                        type={item.type}\n                        image={item.image}\n                    />\n                )}\n            </div>\n            <div className={style.bottom}>\n                <span className=\"text text_type_main-small text_color_inactive\">\n                    {`${currentDate}, ${time} i-GMT+3`}\n                </span>\n                <div className={style.totalContainer}>\n                    <div className=\"text text_type_digits-default mr-2\">\n                        {totalPrice}\n                    </div>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport style from './profile.module.css';\nimport ProfileForm from \"./profile-form/profileForm\";\nimport { NavLink } from \"react-router-dom\";\nimport { Route, Switch } from 'react-router-dom';\nimport ProfileOrdersPage from \"./profile-orders/profileOrders\";\nimport { logout } from \"../../services/actions/auth\";\nimport { useHistory } from 'react-router-dom';\nimport { ProtectedRoute } from \"../../components/protected-route\";\nimport StackDetails from \"../../components/stack-details/stackDetails\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\n\nexport default function ProfilePage() {\n    const id = window.location.pathname.split('orders/')[1]\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { hasLogoutFailed } = useSelector((store) =>\n        store.register)\n\n    const logoutClick = () => {\n        dispatch(\n            logout(() => {\n                history.replace('/login')\n            })\n        )\n    }\n    let showIndex = true;\n\n    if (window.location.pathname.includes(`/profile/orders/${id}`) &&\n        history.length <= 2) {\n        showIndex = false;\n    }\n\n    return (\n        <div className={style.mainContainer}>\n            {\n                showIndex && <div className={style.tabsContainer}>\n                    <NavLink to='/profile' exact\n                        className={`${style.link} text text_type_main-medium text_color_inactive`}\n                        activeClassName={style.linkActive}\n                    >\n                        Профиль\n                    </NavLink>\n                    <NavLink to='/profile/orders'\n                        className={`${style.link} text text_type_main-medium text_color_inactive`}\n                        activeClassName={style.linkActive}\n                        onClick={() => { showIndex = true }}\n                    >\n                        История заказов\n                    </NavLink>\n                    <button\n                        className={`${style.button} text text_type_main-medium text_color_inactive`}\n                        onClick={logoutClick}\n                    >\n                        Выход\n                    </button>\n                    <div className='mb-20'></div>\n                    <p className='text text_type_main-default text_color_inactive'>\n                        В этом разделе вы можете\n                        изменить свои персональные данные\n                    </p>\n                    {hasLogoutFailed &&\n                        <>\n                            <span className=\"text text_type_main-default text_color_inactive mt-6\">\n                                Не удалось выйти из профиля. Скорее всего налажал разработчик.\n                                Глубоко вздохните, познайте сущности единство и бесконечность\n                                черных дыр\n                            </span>\n                            <div className='mb-6'></div>\n                        </>\n                    }\n                </div>\n            }\n\n            <Switch>\n                <Route exact path=\"/profile\">\n                    <ProfileForm />\n                </Route>\n                <Route exact path=\"/profile/orders\">\n                    <ProfileOrdersPage />\n                </Route>\n                <ProtectedRoute exact path='/profile/orders/:id'>\n                    <StackDetails />\n                </ProtectedRoute>\n            </Switch>\n        </div>\n    )\n}","import React from \"react\";\nimport { useSelector } from \"../../services/hooks\";\nimport style from './ordersStack.module.css';\nimport OrderStackItem from \"./orsers-stack-item/ordersStackItem\";\n\nexport default function OrderStack() {\n    const ordersFull = useSelector((store) =>\n        store.ws.messages\n    )\n\n    return (\n        <div className={`${style.container} mr-15`}>\n            <div className={style.stack}>\n                {ordersFull.map((item) =>\n                    <OrderStackItem key={item._id} item={item} />\n                )}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IMessage } from \"../../utils/ts-types\";\nimport style from './ordersStatistic.module.css';\n\nexport default function OrdersStatistic() {\n    const ordersFull = useSelector((store) =>\n        store.ws.messages\n    )\n    const { total, totalToday } = useSelector((store) =>\n        store.ws\n    )\n\n    const doneOrders: (IMessage | undefined)[] = [];;\n    const pendingOrders: (IMessage | undefined)[] = [];;\n\n    ordersFull.forEach((elem) => {\n        if (elem.status === 'done') {\n            doneOrders.push(elem);\n        }\n        if ((elem.status === 'pending')) {\n            pendingOrders.push(elem);\n        }\n    });\n\n    if (doneOrders.length > 10) {\n        doneOrders.splice(10)\n    }\n    if (pendingOrders.length > 10) {\n        doneOrders.splice(10)\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.list}>\n                <div className=\"mr-9\">\n                    <h4 className=\"text text_type_main-medium mb-6\">Готовы:</h4>\n                    {doneOrders.map((number) =>\n                        <li\n                            key={number!._id}\n                            className={`${style.color} text text_type_digits-default mb-2`}>\n                            {number!.number}\n                        </li>\n                    )}\n                </div>\n                <div className={style.inProgress}>\n                    <h4 className=\"text text_type_main-medium mb-6\">В работе:</h4>\n                    {pendingOrders.map((number) =>\n                        <li\n                            key={number!._id}\n                            className={`${style.color} text text_type_digits-default mb-2`}>\n                            {number!.number}\n                        </li>\n                    )}\n                </div>\n            </div>\n            <div className=\"mb-15\">\n                <p className=\"text text_type_main-medium\">\n                    Выполнено за все время:\n                </p>\n                <div className={`${style.colorNum} text text_type_digits-large`}>{total}</div>\n            </div>\n            <div>\n                <p className=\"text text_type_main-medium\">\n                    Выполнено за сегодня:\n                </p>\n                <div className={`${style.colorNum} text text_type_digits-large`}>{totalToday}</div>\n            </div>\n        </div>\n    )\n}","import React, { useEffect } from \"react\";\nimport style from './feed.module.css';\nimport OrderStack from \"../../components/orders-stack/ordersStack\";\nimport OrdersStatistic from \"../../components/orders-statistic/ordersStatistic\";\nimport { WS_CONNECTION_START_ALL, WS_CONNECTION_CLOSED } from \"../../services/actions/wsActionTypes\";\nimport { useDispatch } from \"../../services/hooks\";\n\nexport default function Feed() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: WS_CONNECTION_START_ALL });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        }\n    }, [dispatch]);\n\n    return (\n        <section className={style.container}>\n            <h3 className={`${style.header} text text_type_main-medium mb-5`}>Лента заказов</h3>\n            <div className={style.main}>\n                <OrderStack />\n                <OrdersStatistic />\n            </div>\n        </section>\n    )\n}","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useHistory, useLocation } from 'react-router-dom';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport appStyle from './app.module.css';\nimport AppHeader from '../app-header/appHeader';\nimport BurgerIngredients from '../burger-ingredients/burgerIngredients';\nimport BurgerConstructor from '../burger-constructor/burgerConstructor';\nimport IngredientDetails from '../ingredient-details/ingredientDetails';\nimport OrderDetails from '../order-details/orderDetails';\nimport Modal from '../modal/modal';\nimport { HIDE_MODAL } from '../../services/actions/item';\n\n\nimport { getIngredients } from '../../services/actions/item';\nimport { getUser } from '../../services/actions/auth';\n\nimport LoginPage from '../../pages/login/login';\nimport RegisterPage from '../../pages/register/register';\nimport FogotPassPage from '../../pages/fogot-password/fogotPassword';\nimport ResetPasswordPage from '../../pages/reset-password/resetPassword';\nimport ProfilePage from '../../pages/profile/profile';\nimport Feed from '../../pages/feed/feed';\nimport { ProtectedRoute } from '../protected-route';\nimport StackDetails from '../stack-details/stackDetails';\nimport { useDispatch, useSelector } from '../../services/hooks';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getIngredients())\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getUser())\n  })\n\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nconst Routes = () => {\n  const dispatch = useDispatch()\n  const location = useLocation<any>();\n  const history = useHistory();\n  const background = location.state?.background;\n  const { show } = useSelector((store) =>\n    store.modal\n  )\n  function closeModal() {\n    dispatch({\n      type: HIDE_MODAL\n    })\n  }\n\n  return <>\n    <div className=\"page\" id='page'>\n      <AppHeader />\n      <Switch location={background ?? location}>\n        <Route exact path='/login'>\n          <LoginPage />\n        </Route>\n        <Route exact path='/register'>\n          <RegisterPage />\n        </Route>\n        <Route exact path='/fogot-password'>\n          <FogotPassPage />\n        </Route>\n        <Route exact path='/reset-password'>\n          <ResetPasswordPage />\n        </Route>\n        <ProtectedRoute path='/profile'>\n          <ProfilePage />\n        </ProtectedRoute>\n        <Route exact path=\"/ingredients/:id\">\n          <IngredientDetails />\n        </Route>\n        <Route exact path=\"/feed\">\n          <Feed />\n        </Route>\n        <Route exact path=\"/feed/:id\">\n          <StackDetails />\n        </Route>\n        <ProtectedRoute exact path='/profile/orders/:id'>\n          <StackDetails />\n        </ProtectedRoute>\n\n        <Route exact path={[\"/\", \"/burger\"]}>\n          <main className={appStyle.main}>\n            <DndProvider backend={HTML5Backend}>\n              <BurgerIngredients />\n              <BurgerConstructor />\n            </DndProvider>\n          </main >\n          {\n            show &&\n            <Modal\n              pStyle='pt-30 pr-25 pb-30 pl-25'\n              header=''\n              closeModal={closeModal}\n            >\n              <OrderDetails />\n            </Modal>\n          }\n        </Route>\n      </Switch>\n    </div>\n    {\n      background &&\n      <Route path=\"/ingredients/:id\" >\n        <Modal pStyle='pt-10 pr-10 pb-15 pl-10'\n          header={'Детали ингредиента'}\n          closeModal={() => history.replace(\"/\")} >\n          <IngredientDetails />\n        </Modal>\n      </Route>\n    }\n    {\n      background &&\n      <Route path=\"/feed/:id\" >\n        <Modal pStyle='pt-10 pr-10 pb-15 pl-10'\n          header={''}\n          closeModal={() => history.replace(\"/feed\")} >\n          <StackDetails />\n        </Modal>\n      </Route>\n    }\n    {\n      background &&\n      <ProtectedRoute path=\"/profile/orders/:id\" >\n        <Modal pStyle='pt-10 pr-10 pb-15 pl-10'\n          header={''}\n          closeModal={() => history.replace(\"/profile/orders\")} >\n          <StackDetails />\n        </Modal>\n      </ProtectedRoute>\n    }\n  </>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuid_v4 } from \"uuid\";\nimport {\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    SHOW_MODAL,\n    HIDE_MODAL,\n    ADD_BUN_TO_ODER,\n    REMOVE_FROM_ORDER,\n    ADD_INGREDIENT_TO_ORDER,\n    MOVE_ITEM_IN_ORDER,\n    GET_ORDER_REQUEST,\n    GET_ORDER_SUCCESS,\n    GET_ORDER_FAILED,\n    CHANDGE_CURRENT_TAB,\n    TItemActions\n} from '../actions/item';\n\nimport { ItemType } from \"../../utils/ts-types\";\n\nfunction removeItem(arr: Array<any>, index: number) {\n    arr.splice(index, 1);\n    return arr\n}\n\nfunction moveItem(arr: Array<any>, dragIndex: number, hoverIndex: number) {\n    const dragCard = arr[dragIndex];\n    arr.splice(dragIndex, 1);\n    arr.splice(hoverIndex, 0, dragCard);\n    return arr\n}\n\nexport interface IinitialStateIngredients {\n    items: ItemType[],\n    buns: ItemType[],\n    orderItems: ItemType[],\n    isLoading: boolean,\n    hasRequestFailed: boolean,\n\n}\n\nexport const initialStateIngredients: IinitialStateIngredients = {\n    items: [],\n    buns: [],\n    orderItems: [],\n    isLoading: false,\n    hasRequestFailed: false,\n}\n\nexport const ingredientReducer = (state = initialStateIngredients, action: TItemActions): IinitialStateIngredients => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                isLoading: true\n            }\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                isLoading: false,\n                hasRequestFailed: false,\n                items: action.items\n            }\n        }\n        case GET_INGREDIENTS_FAILED: {\n            return {\n                ...state,\n                isLoading: false,\n                hasRequestFailed: true,\n            }\n        }\n        case ADD_BUN_TO_ODER: {\n            return {\n                ...state,\n                buns: [...state.items.filter(item => item._id === action._id &&\n                    item.type === 'bun')],\n                items: [...state.items].map(item => item.type === 'bun' ? (\n                    item._id === action._id ? { ...item, __v: 2 } : { ...item, __v: 0 }) : item\n                )\n            }\n\n        }\n        case ADD_INGREDIENT_TO_ORDER: {\n            return {\n                ...state,\n                orderItems: [...state.orderItems, ...state.items.filter(item => item._id === action._id &&\n                    item.type !== 'bun')].map(item =>\n                        item._id === action._id ? { ...item, _key: uuid_v4() } : item),\n                items: [...state.items].map(item =>\n                    item._id === action._id ? { ...item, __v: ++item.__v } : item\n                ),\n\n            }\n        }\n        case REMOVE_FROM_ORDER: {\n            return {\n                ...state,\n                orderItems: state.orderItems.filter(\n                    (item) => item._key !== action._key\n                ),\n                items: [...state.items].map(item =>\n                    item._id === action._id ? { ...item, __v: --item.__v } : item\n                )\n            }\n        }\n        case MOVE_ITEM_IN_ORDER: {\n            return {\n                ...state,\n                orderItems: moveItem([...state.orderItems], action.dragIndex, action.hoverIndex)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\ntype TModalState = {\n    currentIngredient: any,\n    show: boolean,\n    content: any\n}\n\nconst initialStateModal: TModalState = {\n    currentIngredient: {},\n    show: false,\n    content: null\n}\n\nexport const modalReduser = (state = initialStateModal, action: TItemActions): TModalState => {\n    switch (action.type) {\n        case SHOW_MODAL: {\n            return {\n                ...state,\n                show: true,\n                content: action.content,\n            }\n        }\n        case HIDE_MODAL: {\n            return {\n                ...state,\n                show: false,\n                content: null,\n                currentIngredient: {}\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\ntype TOrderState = {\n    orderNumber: null | number,\n    isLoadingOrder: boolean,\n    hasRequestOrderFailed: boolean\n}\n\nconst initialStateOrder: TOrderState = {\n    orderNumber: null,\n    isLoadingOrder: false,\n    hasRequestOrderFailed: false\n}\n\nexport const orderReduser = (state = initialStateOrder, action: TItemActions): TOrderState => {\n    switch (action.type) {\n        case GET_ORDER_REQUEST: {\n            return {\n                ...state,\n                isLoadingOrder: true\n            }\n        }\n        case GET_ORDER_SUCCESS: {\n            return {\n                ...state,\n                isLoadingOrder: false,\n                hasRequestOrderFailed: false,\n                orderNumber: action.orderNumber\n            }\n        }\n        case GET_ORDER_FAILED: {\n            return {\n                ...state,\n                isLoadingOrder: false,\n                hasRequestOrderFailed: true\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\ntype TTabState = {\n    current: string;\n}\n\nconst initialStateTab: TTabState = {\n    current: 'Булки'\n}\n\nexport const tabReduser = (state = initialStateTab, action: TItemActions): TTabState => {\n    switch (action.type) {\n        case CHANDGE_CURRENT_TAB: {\n            return {\n                ...state,\n                current: action.current\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}","import { IUser } from \"../../utils/ts-types\";\nimport {\n    REG_USER_REQUEST,\n    REG_USER_SUCCESS,\n    REG_USER_FAILED,\n    AUTH_USER_REQUEST,\n    AUTH_USER_SUCCESS,\n    AUTH_USER_FAILED,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n    LOGOUT_USER_REQUEST,\n    LOGOUT_USER_SUCCESS,\n    LOGOUT_USER_FAILED,\n    FOGOT_PASS_REQUEST,\n    FOGOT_PASS_SUCCESS,\n    FOGOT_PASS_FAILED,\n    RESET_PASS_REQUEST,\n    RESET_PASS_SUCCESS,\n    RESET_PASS_FAILED,\n    CHANGE_USER_REQUEST,\n    CHANGE_USER_SUCCESS,\n    CHANGE_USER_FAILED,\n    TAuthActions\n} from \"../actions/auth\";\n\ntype TUserState = {\n    user: IUser;\n    regUserRequest: boolean,\n    hasReqRegSuccess: boolean,\n    hasReqRegFailed: boolean,\n\n    authUserRequest: boolean,\n    hasReqAuthFailed: boolean,\n    hasReqAuthSuccess: boolean,\n\n    getUserRequest: boolean,\n    hasGetUserReqFailed: boolean,\n    hasGetUserReqSuccess: boolean,\n\n    logoutRequest: boolean,\n    hasLogoutSuccess: boolean,\n    hasLogoutFailed: boolean,\n\n    fogotPassRequest: boolean,\n    hasFogotPassReqSuccess: boolean,\n    hasFogotPassReqFailed: boolean,\n\n    resetPassRequest: boolean,\n    hasResetPassReqSuccess: boolean,\n    hasResetPassReqFailed: boolean,\n\n    changeUserRequest: boolean,\n    hasChangeUserReqSuccess: boolean,\n    hasChangeUserReqFailed: boolean\n}\n\nexport const initialStateUser: TUserState = {\n    user: {\n        name: '',\n        email: ''\n    },\n    regUserRequest: false,\n    hasReqRegSuccess: false,\n    hasReqRegFailed: false,\n\n    authUserRequest: false,\n    hasReqAuthFailed: false,\n    hasReqAuthSuccess: false,\n\n    getUserRequest: false,\n    hasGetUserReqFailed: false,\n    hasGetUserReqSuccess: false,\n\n    logoutRequest: false,\n    hasLogoutSuccess: false,\n    hasLogoutFailed: false,\n\n    fogotPassRequest: false,\n    hasFogotPassReqSuccess: false,\n    hasFogotPassReqFailed: false,\n\n    resetPassRequest: false,\n    hasResetPassReqSuccess: false,\n    hasResetPassReqFailed: false,\n\n    changeUserRequest: false,\n    hasChangeUserReqSuccess: false,\n    hasChangeUserReqFailed: false\n}\n\nexport const regReducer = (state = initialStateUser, action: TAuthActions): TUserState => {\n    switch (action.type) {\n        case REG_USER_REQUEST: {\n            return {\n                ...state,\n                regUserRequest: true,\n                hasReqRegSuccess: false\n            }\n        }\n        case REG_USER_SUCCESS: {\n            return {\n                ...state,\n                regUserRequest: false,\n                hasReqRegFailed: false,\n                hasReqRegSuccess: true,\n                user: action.user\n            }\n        }\n        case REG_USER_FAILED: {\n            return {\n                ...state,\n                regUserRequest: false,\n                hasReqRegFailed: true,\n                hasReqRegSuccess: false\n            }\n        }\n        case AUTH_USER_REQUEST: {\n            return {\n                ...state,\n                authUserRequest: true,\n                hasReqAuthSuccess: false\n            }\n        }\n        case AUTH_USER_SUCCESS: {\n            return {\n                ...state,\n                authUserRequest: false,\n                hasReqAuthFailed: false,\n                hasReqAuthSuccess: true,\n                user: action.user\n            }\n        }\n        case AUTH_USER_FAILED: {\n            return {\n                ...state,\n                authUserRequest: false,\n                hasReqAuthFailed: true,\n                hasReqAuthSuccess: false\n            }\n        }\n        case GET_USER_REQUEST: {\n            return {\n                ...state,\n                getUserRequest: true,\n                hasReqRegFailed: false,\n                hasGetUserReqSuccess: false\n            }\n        }\n        case GET_USER_SUCCESS: {\n            return {\n                ...state,\n                getUserRequest: false,\n                hasReqRegFailed: false,\n                user: action.user,\n                hasGetUserReqSuccess: true\n            }\n        }\n        case GET_USER_FAILED: {\n            return {\n                ...state,\n                getUserRequest: false,\n                hasReqRegFailed: true,\n                user: {\n                    name: '',\n                    email: ''\n                },\n                hasGetUserReqSuccess: false\n            }\n        }\n        case LOGOUT_USER_REQUEST: {\n            return {\n                ...state,\n                logoutRequest: true,\n                hasLogoutSuccess: false\n            }\n        }\n        case LOGOUT_USER_SUCCESS: {\n            return {\n                ...state,\n                logoutRequest: false,\n                hasLogoutSuccess: false,\n                hasLogoutFailed: false,\n                user: {\n                    name: '',\n                    email: ''\n                }\n            }\n        }\n        case LOGOUT_USER_FAILED: {\n            return {\n                ...state,\n                logoutRequest: false,\n                hasLogoutSuccess: false,\n                hasLogoutFailed: true\n            }\n        }\n        case FOGOT_PASS_REQUEST: {\n            return {\n                ...state,\n                fogotPassRequest: true,\n                hasFogotPassReqSuccess: false,\n                hasFogotPassReqFailed: false\n            }\n        }\n        case FOGOT_PASS_SUCCESS: {\n            return {\n                ...state,\n                fogotPassRequest: false,\n                hasFogotPassReqSuccess: true,\n                hasFogotPassReqFailed: false\n            }\n        }\n        case FOGOT_PASS_FAILED: {\n            return {\n                ...state,\n                fogotPassRequest: false,\n                hasFogotPassReqSuccess: false,\n                hasFogotPassReqFailed: true\n            }\n        }\n        case RESET_PASS_REQUEST: {\n            return {\n                ...state,\n                resetPassRequest: true,\n                hasResetPassReqSuccess: false,\n                hasResetPassReqFailed: false\n            }\n        }\n        case RESET_PASS_SUCCESS: {\n            return {\n                ...state,\n                resetPassRequest: false,\n                hasResetPassReqSuccess: true,\n                hasResetPassReqFailed: false\n            }\n        }\n        case RESET_PASS_FAILED: {\n            return {\n                ...state,\n                resetPassRequest: false,\n                hasResetPassReqSuccess: false,\n                hasResetPassReqFailed: true\n            }\n        }\n        case CHANGE_USER_REQUEST: {\n            return {\n                ...state,\n                changeUserRequest: true,\n                hasChangeUserReqSuccess: false,\n                hasChangeUserReqFailed: false\n            }\n        }\n        case CHANGE_USER_SUCCESS: {\n            return {\n                ...state,\n                changeUserRequest: false,\n                hasChangeUserReqSuccess: true,\n                hasChangeUserReqFailed: false,\n                user: action.user\n            }\n        }\n        case CHANGE_USER_FAILED: {\n            return {\n                ...state,\n                changeUserRequest: false,\n                hasChangeUserReqSuccess: false,\n                hasChangeUserReqFailed: true\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}","import {\n    TWsActions,\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_SUCCESS,\n    WS_GET_MESSAGE\n} from '../actions/wsActionTypes';\n\nimport { TWSState } from '../../utils/ts-types';\n\nexport const initialState: TWSState = {\n    wsConnected: false,\n    messages: [],\n    total: 0,\n    totalToday: 0\n};\n\n// Создадим редьюсер для WebSocket\nexport const wsReducer = (state = initialState, action: TWsActions): TWSState => {\n    switch (action.type) {\n        // Опишем обработку экшена с типом WS_CONNECTION_SUCCESS\n        // Установим флаг wsConnected в состояние true\n        case WS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: true\n            };\n\n        // Опишем обработку экшена с типом WS_CONNECTION_ERROR\n        // Установим флаг wsConnected в состояние false и передадим ошибку из action.payload\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                wsConnected: false\n            };\n\n        // Опишем обработку экшена с типом WS_CONNECTION_CLOSED, когда соединение закрывается\n        // Установим флаг wsConnected в состояние false\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false\n            };\n\n        // Опишем обработку экшена с типом WS_GET_MESSAGE\n        // Обработка происходит, когда с сервера возвращаются данные\n        // В messages передадим данные, которые пришли с сервера\n        case WS_GET_MESSAGE:\n            const { orders } = action.payload;\n            return {\n                ...state,\n                error: undefined,\n                messages: orders,\n                total: action.payload.total,\n                totalToday: action.payload.totalToday\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { ingredientReducer, modalReduser, orderReduser, tabReduser } from './item';\nimport { regReducer } from './auth';\nimport { wsReducer } from './wsReducer';\n\nexport const rootReducer = combineReducers({\n    ingredient: ingredientReducer,\n    modal: modalReduser,\n    order: orderReduser,\n    currentTab: tabReduser,\n    register: regReducer,\n    ws: wsReducer\n});\n","import type { AnyAction, Middleware, MiddlewareAPI } from 'redux';\nimport { WsActions } from '../../utils/ts-types';\n\n\n// import type { AppActions, AppDispatch, RootState } from '../types';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: WsActions): Middleware => {\n    return ((store: MiddlewareAPI) => {\n        let socket: WebSocket | null = null;\n\n        return next => (action: AnyAction) => {\n            const { dispatch } = store;\n            const { type } = action;\n            const { wsInit, wsInitAll, onOpen, onClose, onError, onMessage } = wsActions;\n\n            if (type === wsInitAll) {\n                // объект класса WebSocket\n                socket = new WebSocket(`${wsUrl}/all`);\n            }\n            if (type === wsInit) {\n                // объект класса WebSocket\n                const token = localStorage.getItem('accessToken')?.split('Bearer')[1].split(' ')[1];\n                socket = new WebSocket(`${wsUrl}?token=${token}`);\n            }\n            if (socket) {\n                // функция, которая вызывается при открытии сокета\n                socket.onopen = event => {\n                    dispatch({ type: onOpen, payload: event });\n                };\n\n                // функция, которая вызывается при ошибке соединения\n                socket.onerror = event => {\n                    dispatch({ type: onError, payload: event });\n                };\n\n                // функция, которая вызывается при получения события от сервера\n                socket.onmessage = event => {\n                    const { data } = event;\n                    const parsedData = JSON.parse(data);\n                    const { success, ...restParsedData } = parsedData;\n                    dispatch({ type: onMessage, payload: restParsedData });\n                };\n\n                // функция, которая вызывается при закрытии соединения\n                socket.onclose = event => {\n                    socket!.close();\n                    dispatch({ type: onClose, payload: event });\n                };\n            }\n\n            next(action);\n        };\n    }) as Middleware;\n};","import { rootReducer } from './reducers';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { WsActions } from '../utils/ts-types';\nimport {\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR,\n    WS_GET_MESSAGE,\n    WS_CONNECTION_START_ALL\n} from './actions/wsActionTypes';\nimport { WSURL } from '../utils/url';\nimport { socketMiddleware } from './middleware/socketMiddleware';\n\nconst wsUrl = WSURL;\n\nconst wsActions: WsActions = {\n    wsInit: WS_CONNECTION_START,\n    wsInitAll: WS_CONNECTION_START_ALL,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE\n};\n\nexport const initStore = (initialState = {}) =>\n    createStore(\n        rootReducer,\n        initialState,\n        compose(applyMiddleware(thunkMiddleware, socketMiddleware(wsUrl, wsActions)))\n    );\n\n// const composeEnhancers =\n//     typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//         ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n//         : compose;\n\n// const enhancer = composeEnhancers(applyMiddleware(thunk));\n// export const store = createStore(rootReducer, enhancer);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { initStore } from './services/store';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { EmailInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  BurgerIcon,\n  CloseIcon,\n  CheckMarkIcon,\n  CurrencyIcon,\n  DragIcon,\n  EditIcon,\n  HideIcon,\n  InfoIcon,\n  ListIcon,\n  LockIcon,\n  LogoutIcon,\n  ProfileIcon,\n  ShowIcon,\n  DeleteIcon,\n  ArrowUpIcon,\n  ArrowDownIcon,\n  MenuIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';;\n\nexport {\n  Button,\n  Logo,\n  ConstructorElement,\n  Tab,\n  Input,\n  Counter,\n  EmailInput,\n  PasswordInput,\n  BurgerIcon,\n  CloseIcon,\n  CheckMarkIcon,\n  CurrencyIcon,\n  DragIcon,\n  EditIcon,\n  HideIcon,\n  InfoIcon,\n  ListIcon,\n  LockIcon,\n  LogoutIcon,\n  ProfileIcon,\n  ShowIcon,\n  DeleteIcon,\n  ArrowUpIcon,\n  ArrowDownIcon,\n  MenuIcon,\n};\n\nexport const store = initStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredientDetails_content__3wVdd\",\"modalImage\":\"ingredientDetails_modalImage__1V8Z6\",\"spansContainer\":\"ingredientDetails_spansContainer__tpsBp\",\"spans\":\"ingredientDetails_spans__CUOGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsContainer\":\"profile_tabsContainer__8X5L8\",\"mainContainer\":\"profile_mainContainer__a73zV\",\"link\":\"profile_link__1-1p8\",\"linkActive\":\"profile_linkActive__LfmXC\",\"button\":\"profile_button__2w-9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"ordersStatistic_color__1lt7Y\",\"liProgress\":\"ordersStatistic_liProgress__Zf3dh\",\"list\":\"ordersStatistic_list__sb6tl\",\"container\":\"ordersStatistic_container__K1D1V\",\"colorNum\":\"ordersStatistic_colorNum__3tL0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2wyBj\",\"content\":\"login_content__28Q5n\",\"form\":\"login_form__3DD6c\",\"buttons\":\"login_buttons__11O8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stack\":\"stackDetails_stack__sQ2JH\",\"totalContainer\":\"stackDetails_totalContainer__26fwC\",\"bottom\":\"stackDetails_bottom__15tmc\",\"container\":\"stackDetails_container__2fyN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredientItem_container__3Hn4l\",\"image\":\"ingredientItem_image__d86ve\",\"priceContainer\":\"ingredientItem_priceContainer__RNx0l\",\"name\":\"ingredientItem_name__2jZHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register_container__2rH3-\",\"content\":\"register_content__3FBxM\",\"form\":\"register_form__16uRP\",\"buttons\":\"register_buttons__16bHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fogotPassword_container__2kKIJ\",\"content\":\"fogotPassword_content__1vN4F\",\"form\":\"fogotPassword_form__3ZhTF\",\"buttons\":\"fogotPassword_buttons__1Gml5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"resetPassword_container__2Jv6m\",\"content\":\"resetPassword_content__2z2BI\",\"form\":\"resetPassword_form__28CIJ\",\"buttons\":\"resetPassword_buttons__2X8Uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ordersStackItem_container__sBgnI\",\"top\":\"ordersStackItem_top__243PA\",\"bottom\":\"ordersStackItem_bottom__1pZq6\",\"totalContainer\":\"ordersStackItem_totalContainer__1j0YC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"stackItem_image__2k0ke\",\"container\":\"stackItem_container__18H5s\",\"nameCont\":\"stackItem_nameCont__18zTS\",\"total\":\"stackItem_total__3QX_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"appHeader_header__1wUa6\",\"container\":\"appHeader_container__2FgFj\",\"logo\":\"appHeader_logo__1PbXb\",\"profile\":\"appHeader_profile__1syo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orderDetails_container__3O2AB\",\"image\":\"orderDetails_image__1qAVK\",\"text\":\"orderDetails_text__VBZEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"modal_content__1tQ-X\",\"header\":\"modal_header__2iX3r\",\"close\":\"modal_close__1Iez6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__3Zlhe\",\"main\":\"feed_main__3gURw\",\"header\":\"feed_header__31KK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burgerIngredients_section__1-vC3\",\"mainContainer\":\"burgerIngredients_mainContainer__GN61-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profileForm_form__3EWgV\",\"buttonContainer\":\"profileForm_buttonContainer__12ZYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ordersStack_container__sfjKV\"};"],"sourceRoot":""}